
DebugModuleDescriptor is TDebugModuleDescriptor()

template TModuleSelectorFilterIfCadavre
[ Descriptor ]
is TModuleSelectorFilter
(
    Condition  = TModuleSelectorCondition_ParamEquals_Integer(ParamId=~/Parameter_ModuleCreationSelectionFilter  ParamValue=~/ModuleCreationFilter_Cadavre)
    Descriptor = <Descriptor>
)

NilDescriptorIfCadavre is TModuleSelectorFilterIfCadavre
(
    Descriptor = nil
)

LinkTeamModuleDescriptor is TLinkTeamModuleDescriptor
(
)

InfluenceDataModuleSelector is TModuleSelector
(
     Default = TInfluenceDataModuleDescriptor
     (
     )
     Selection = [ ~/NilDescriptorIfCadavre ]
)

EffectApplierModuleSelector is TEffectApplierModuleDescriptor
(
)

OrderDisplayModuleDescriptor is TOrderDisplayModuleDescriptor()

PackSignauxModuleDescriptor  is TPackSignauxModuleDescriptor()

InflammableModuleDescriptorUnit  is TInflammableModuleDescriptor
(
)

public FXState is TBaseClass
(
    // Doit être synchro avec TActOfRuseBuildingAnimationStates/Type
    // (BuildingAnimationModule_WarGame.h)

    Idle            is 0x00000001
    OnFire          is 0x00000002

    // Merci de mettre à jour ce champ au besoin
    All is Idle + OnFire
)

InflammableModuleDescriptorDistrict  is TInflammableModuleDescriptor
(
    FireFxStateId                   = ~/FXState/OnFire
    IdleFxStateId                   = ~/FXState/Idle
)

DefaultShowroomCameraModule is TCameraShowroomModuleDescriptor
(
    Token = 'Default'
)

TargetDataModuleDescriptor is TModuleSelector
(
    Default        = TTargetDataModuleDescriptor()
    Selection = [~/NilDescriptorIfCadavre]
)

template TCadavreGeneratorModuleDescriptorUnit
[ CadavreDescriptor ]
is TModuleSelector
(
    Default        = TCadavreGeneratorModuleDescriptor( CadavreDescriptor = <CadavreDescriptor> )
    Selection      = [~/NilDescriptorIfCadavre]
)
