SpecificInGameLDHintResource is TUICommonInGameLDHintResource
(
    UserInputLayer = $/M3D/Input/UserInputLayerHandler/InputLayer_SkipLDHint

    PauseButton = ~/LDHintDefaultButton

    DontMaskUserInputEvents = true

    ComponentByName = MAP[
        ( "DefaultComponent", LDHintDefaultComponent ),
        ( "HintComponent", LDHintDefaultComponentWithoutPause ),

        ( "ScoreMessageEconomyOrDestruction", LDHintDefaultComponentWithoutPause ),
        ( "CampaignComponent", LDHintDefaultComponentWithoutPause_2 ),
        ( "CampaignComponentWithoutPause", LDHintDefaultComponent ),
        ( "AlertComponent", LDHintAlertComponent ),
        ( "RemainingTimeAlertComponent", LDHintRemainingTimeAlertComponent),
        ( "SuddenDeathAlertComponent", LDHintSuddenDeathAlertComponent),
        ( "ConquestLocalPlayerHasAdvantageComponent", LDHintConquestLocalPlayerHasAdvantageComponent ),
        ( "ConquestOpponentHasAdvantageComponent", LDHintConquestOpponentHasAdvantageComponent ),
        ( "StrategicPlayerTurn", LDHintDefaultComponentWithoutPause ),
        ( "LocalPlayerAllianceMoralComponent", LDHintLocalPlayerAllianceMoralComponent ),
        ( "EnemyAllianceMoralComponent", LDHintEnemyAllianceMoralComponent ),
        ( "SuperHint", SuperHint() ),
        ( "shint", SuperHint() ),
        ( "shint_droit", SuperHint( alignementGauche = false) ),

        //-------------------------------------------------------------------------------------
        // spotlight pour tuto
        ( "Spotlight_test", Spotlight_test),
        ( "Spotlight_mortier", Spotlight_mortier),
        ( "Spotlight_sellUnit", Spotlight_mortier),
        ( "Spotlight_movefast",     Spotlight_LD
            (
                UniqueName = "Spotlight_movefast"
                MagnifiableWidthHeight = [124.0, 46.0]
                MagnifiableOffset = [-138,-135]
                AlignementToAnchor = [1.0, 1.0]
                AlignementToFather = [1.0, 1.0]
            )
        ),
        ( "Spotlight_move",         Spotlight_LD
            (
                UniqueName = "Spotlight_move"
                MagnifiableWidthHeight = [124.0, 46.0]
                MagnifiableOffset = [-14,-90]
                AlignementToAnchor = [1.0, 1.0]
                AlignementToFather = [1.0, 1.0]
            )
        ),

        //-------------------------------------------------------------------------------------
        // ajouter ici le composant
        //-------------------------------------------------------------------------------------
        // testTuto
        ( "testTuto", MES_PauseAndTexture (TextureToken = "Image_testTuto") ),
        ( "Recon3", MES_PauseAndTexture (TextureToken = "Recon3") ),
        ( "redhat_radio2", MES_PauseAndTexture (TextureToken = "redhat_radio2") ),
        ( "tanker3", MES_PauseAndTexture (TextureToken = "tanker3") ),
        ( "combat_char", Hint_PauseAndTexture (TextureToken = "combat_char") ),
        ( "combat_charTop", Hint_PauseAndTexture (TextureToken = "combat_charTop") ),
        ( "combat_charLeft", Hint_PauseAndTexture (TextureToken = "combat_charLeft") ),
        ( "combat_charRight", Hint_PauseAndTexture (TextureToken = "combat_charRight") ),
        ( "test_hint", Hint_PauseAndTexture (TextureToken = "test_hint") ),
        ( "hint", PORTRAIT_PauseAndTexture (TextureToken = "") ),
        ( "hint_noPause", PORTRAIT_PauseAndTexture (TextureToken = "" HasButtons = false) ),

        //-------------------------------------------------------------------------------------
        // test_tuto_5
        ( "test_Tuto_5_shootAircraft", MES_PauseAndTexture (TextureToken = "Image_test_Tuto_5_shootAircraft") ),
        ( "aigle", PORTRAIT_PauseAndTexture (TexturePortrait = "Image_aigle") ),
        ( "portrait_aigle", PORTRAIT_Narration  (TextureToken = "Image_aigle") ),

        ( "test_Tuto_5_A", MES_PauseAndTexture (TextureToken = "Image_test_Tuto_5_A") ),
        ( "test_Tuto_5_B", MES_PauseAndTexture (TextureToken = "Image_test_Tuto_5_B") ),
        ( "test_Tuto_5_C", MES_PauseAndTexture (TextureToken = "Image_test_Tuto_5_C") ),
        ( "test_Tuto_5_D", MES_PauseAndTexture (TextureToken = "Image_test_Tuto_5_D") ),
        ( "test_Tuto_5_E", MES_PauseAndTexture (TextureToken = "Image_test_Tuto_5_E") ),
        ( "hint_hunt", PORTRAIT_PauseAndTexture     (TextureToken = "hint_hunt"         IsHint = true) ),
        ( "hint_curseur", PORTRAIT_PauseAndTexture  (TextureToken = "hint_curseur"      IsHint = true) ),



        // z_tuto_camera
        ( "tuto_camera_videoCamera",        PORTRAIT_PauseAndTexture (VideoName = "GameData:/Assets/Videos/tutorials/hint_camera.webm"    HasButtons = false   )),
        ( "tuto_camera_videoPanelInfo",     PORTRAIT_PauseAndTexture (VideoName = "GameData:/Assets/Videos/tutorials/tuto_camera_panelinfo.webm"  HasButtons = false)),
        ( "tuto_camera_label",              PORTRAIT_PauseAndTexture (TextureToken = 'tuto_camera_label'                            )),
        ( "tuto_camera_planelArme",         PORTRAIT_PauseAndTexture (TextureToken = 'tuto_camera_planelArme'                       )),
        ( "tuto_camera_planelInfo",         PORTRAIT_PauseAndTexture (TextureToken = 'tuto_camera_planelInfo'                       )),
        ( "tuto_camera_planelSelection",    PORTRAIT_PauseAndTexture (TextureToken = 'tuto_camera_planelSelection' HasButtons = false )),
        ( "tuto_camera_cubeAction",         PORTRAIT_PauseAndTexture (TextureToken = 'tuto_camera_cubeAction' HasButtons = false )),

        ( "dragon",                         PORTRAIT_PauseAndTexture (TexturePortrait = 'dragon'                        )),
        ( "dragon_noPause",                 PORTRAIT_PauseAndTexture (TexturePortrait = 'dragon'                        HasButtons = false    )),

        ( "sabre",                          PORTRAIT_PauseAndTexture (TexturePortrait = 'Image_aigle'                               )),
        ( "sabre2",                          PORTRAIT_PauseAndTexture (TexturePortrait = 'Image_aigle'                               HasButtons = false)),
        ( "sabre6",                          PORTRAIT_PauseAndTexture (TexturePortrait = 'Image_aigle'                               HasButtons = false)),
        ( "sabre6_pause",                          PORTRAIT_PauseAndTexture (TexturePortrait = 'Image_aigle'                               HasButtons = true)),

        ( "general_test",                   PORTRAIT_PauseAndTexture (TexturePortrait = 'tuto_camera_general_test'                  HasButtons = false )),
        ( "noPortrait",                     PORTRAIT_PauseAndTexture (HasButtons = false NoImage = true)),
        ( "Steelman_test_tuto_general2",    PORTRAIT_PauseAndTexture (TextureSteelman_FullScreen = 'Steelman_test_general2' HasButtons = false)),
        ( "Steelman_test_tuto_general2_fin",    PORTRAIT_PauseAndTexture (TextureSteelman_FullScreen = 'Steelman_test_general2' )),

        ( "panel_selection_centre",                    PORTRAIT_PauseAndTexture (TextureSteelman = 'panel_selection_centre'                        HasButtons = true    )),
        ( "panel_selection_droit",                    PORTRAIT_PauseAndTexture (TextureSteelman = 'panel_selection_droit'                        HasButtons = true    )),
        ( "panel_selection_gauche",                    PORTRAIT_PauseAndTexture (TextureSteelman = 'panel_selection_gauche'                        HasButtons = true    )),

        // z_tuto_reco
        ( "tuto_reco_los",              PORTRAIT_PauseAndTexture (VideoName = "GameData:/Assets/Videos/tutorials/tuto_reco_los.webm" )),
        ( "tuto_reco_stealth",          PORTRAIT_PauseAndTexture (VideoName = "GameData:/Assets/Videos/tutorials/tuto_reco_stealth.webm" HasButtons = false )),
        ( "able",                       PORTRAIT_PauseAndTexture (TexturePortrait = 'able'                        HasButtons = false    )),

        // tuto_combat infanterie
        ( "tuto_stunned",                       PORTRAIT_PauseAndTexture (TextureToken = 'tuto_stunned'                        HasButtons = false    )),
        ( "tuto_routing",                       PORTRAIT_PauseAndTexture (TextureToken = 'tuto_routing'                        HasButtons = false    )),
        ( "tuto_stress",                       PORTRAIT_PauseAndTexture (TextureToken = 'tuto_stress'                        HasButtons = false    )),
        ( "tuto_stress2",                       PORTRAIT_PauseAndTexture (TextureToken = 'tuto_stress'                        HasButtons = false    )),
        ( "tuto_cohesion",                       PORTRAIT_PauseAndTexture (TextureToken = 'tuto_cohesion'                        HasButtons = false    )),
        ( "tuto_m16",                       PORTRAIT_PauseAndTexture (TextureToken = 'tuto_m16'                        HasButtons = false    )),
        ( "tuto_m249",                       PORTRAIT_PauseAndTexture (TextureToken = 'tuto_m249'                        HasButtons = false    )),
        ( "tuto_dragonMissile",                       PORTRAIT_PauseAndTexture (TextureToken = 'tuto_dragonMissile'                        HasButtons = false    )),
        ( "tuto_UnloadAtPosition",        PORTRAIT_PauseAndTexture (VideoName = "GameData:/Assets/Videos/tutorials/tuto_UnloadAtPosition.webm"    HasButtons = false   )),

        // z_tuto_infanterieCaC
        ( "greenBeret",                       PORTRAIT_PauseAndTexture (TexturePortrait = 'greenBeret'                        HasButtons = false    )),
        ( "mp5",                       PORTRAIT_PauseAndTexture (TextureToken = 'mp5'                        HasButtons = false    )),
        ( "satchel",                       PORTRAIT_PauseAndTexture (TextureToken = 'satchel'                        HasButtons = false    )),
        // z_tuto_charBasic
        ( "ap",                       PORTRAIT_PauseAndTexture (TextureSteelman = 'ap'                        HasButtons = true    )),
        ( "armor",                    PORTRAIT_PauseAndTexture (TextureSteelman = 'armor'                        HasButtons = true    )),
        ( "damage",                   PORTRAIT_PauseAndTexture (TextureSteelman = 'damage'                        HasButtons = true    )),
        ( "chance_to_hit",            PORTRAIT_PauseAndTexture (TextureSteelman = 'chance_to_hit'                        HasButtons = true    )),
        ( "tankGun",                  PORTRAIT_PauseAndTexture (TextureSteelman = 'tankGun'                        HasButtons = true    )),
        ( "range",                    PORTRAIT_PauseAndTexture (TextureSteelman = 'range'                        HasButtons = true    )),
        ( "tuto_curseurTactique",     PORTRAIT_PauseAndTexture (VideoName = "GameData:/Assets/Videos/tutorials/tuto_Curseurtactique3.webm"    HasButtons = false   )),

        // z_tuto_atgm
        ( "patton",                       PORTRAIT_PauseAndTexture (TexturePortrait = 'patton'                        HasButtons = false    )),
        ( "tow2",                       PORTRAIT_PauseAndTexture (TexturePortrait = 'tow2'                        HasButtons = false    )),
        ( "Penetrationimpossible",        PORTRAIT_PauseAndTexture (VideoName = "GameData:/Assets/Videos/tutorials/Penetrationimpossible.webm"    HasButtons = false   )),
        //-------------------------------------------------------------------------------------
        // challenge

        ("titre" , TitreMissionFullscreen),
        ( "challenge_test",                     challenge (TextureToken = 'challenge_test' )),
        ( "challenge_test_armory0",             challenge (TextureToken = 'challenge_test_armory0' )),
        ( "challenge_test_armory1",             challenge (TextureToken = 'challenge_test_armory1' )),

        // Defense en profondeur
        ( "challenge_defense_1",             PORTRAIT_PauseAndTexture (TextureSteelman = 'challenge_defense_1' IsBriefing = true )),
        //-------------------------------------------------------------------------------------
        // Steelman

        ( "Steelman_test_officier1",             PORTRAIT_PauseAndTexture (TextureSteelman = 'Steelman_test_officier1' )),
        ( "Steelman_test_officier2",             PORTRAIT_PauseAndTexture (TextureSteelman = 'Steelman_test_officier2' )),
        ( "Steelman_test_general1",             PORTRAIT_PauseAndTexture (TextureSteelman = 'Steelman_test_general1' )),
        ( "Steelman_test_general2",             PORTRAIT_PauseAndTexture (TextureSteelman_FullScreen = 'Steelman_test_general2' )),
        ( "Steelman_test_regles",             PORTRAIT_PauseAndTexture (TextureSteelman = 'Steelman_test_regles' )),

   ]
)
//-------------------------------------------------------------------------------------
// Liste des Textures
//-------------------------------------------------------------------------------------



UseInGame_AdditionalLDHintTextureBank is TBUCKToolAdditionalTextureBank
(
    Textures = MAP
    [
    ("LDHintCampaign_PortraitHintPauseTexture",                     MAP [(~/ComponentState/Normal, ~/LDHintCampaign_PortraitHintPauseTexture)] ),
    ("LDHintCampaign_InfoTexture",                                  MAP [(~/ComponentState/Normal, ~/LDHintCampaign_InfoTexture)] ),

    //-------------------------------------------------------------------------------------
    ( "Image_testTuto", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/Image_testTuto.png' ))] ),
    ( "tanker3", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/tanker3.png' ))] ),
    ( "redhat_radio2", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/redhat_radio2.png' ))] ),
    ( "Recon3", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/Recon3.png' ))] ),
    ( "combat_char", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/combat_char.png' ))] ),
    ( "combat_charTop", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/combat_charTop.png' ))] ),
    ( "combat_charRight", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/combat_charRight.png' ))] ),
    ( "combat_charLeft", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/combat_charLeft.png' ))] ),
    ( "test_hint", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/test_hint.png' ))] ),

    //-------------------------------------------------------------------------------------
    // test_tuto_5
    ( "Image_test_Tuto_5_shootAircraft", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/test_tuto_5/shootAircraft.png' ))] ),
    ( "Image_aigle",                     MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/test_tuto_5/aigle.png' ))] ),
    ( "Image_test_Tuto_5_A", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/test_tuto_5/A.png' ))] ),
    ( "Image_test_Tuto_5_B", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/test_tuto_5/B.png' ))] ),
    ( "Image_test_Tuto_5_C", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/test_tuto_5/C.png' ))] ),
    ( "Image_test_Tuto_5_D", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/test_tuto_5/D.png' ))] ),
    ( "Image_test_Tuto_5_E", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/test_tuto_5/E.png' ))] ),

    ( "hint_hunt", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/test_tuto_5/hint_hunt.png' ))] ),
    ( "hint_curseur", MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/test_tuto_5/hint_curseur.png' ))] ),

    //-------------------------------------------------------------------------------------
    // z_tuto_camera
    ( "tuto_camera_label",                  MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/tuto_camera_label2.png' ))] ),
    ( "tuto_camera_planelArme",             MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/tuto_camera_planelArme.png' ))] ),
    ( "tuto_camera_planelInfo",             MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/tuto_camera_planelInfo.png' ))] ),
    ( "tuto_camera_planelSelection",        MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/tuto_camera_planelSelection.png' ))] ),
    ( "tuto_camera_dragon",                 MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/tuto_camera_dragon.png' ))] ),
    ( "tuto_camera_cubeAction",                 MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/tuto_camera_cubeAction.png' ))] ),
    ( "tuto_camera_general_test",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/general_test.png' ))] ),
    ( "dragon",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/dragon.png' ))] ),

    ( "panel_selection_gauche",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/panel_selection_gauche.png' ))] ),
    ( "panel_selection_droit",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/panel_selection_droit.png' ))] ),
    ( "panel_selection_centre",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_camera/panel_selection_centre.png' ))] ),

    //zz_tuto_recon
    ( "able",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_reco/able.png' ))] ),
    // tuto_combatInfanterie
    ( "tuto_cohesion",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_combatInfanterie/cohesion.png' ))] ),
    ( "tuto_stress",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_combatInfanterie/stress2.png' ))] ),
    ( "tuto_routing",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_combatInfanterie/routing.png' ))] ),
    ( "tuto_stunned",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_combatInfanterie/stunned.png' ))] ),
    ( "tuto_m249",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_combatInfanterie/m249.png' ))] ),
    ( "tuto_m16",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_combatInfanterie/m16.png' ))] ),
    ( "tuto_dragonMissile",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_combatInfanterie/dragon2.png' ))] ),
    // z_tuto_infanterieCaC
    ( "greenBeret",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_infanterieCaC/greenBeret.png' ))] ),
    ( "mp5",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_infanterieCaC/mp5.png' ))] ),
    ( "satchel",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_infanterieCaC/satchel.png' ))] ),
    // z_tuto_charBasic
    ( "ap",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_charBasic/ap.png' ))] ),
    ( "armor",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_charBasic/armor.png' ))] ),
    ( "chance_to_hit",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_charBasic/chance_to_hit.png' ))] ),
    ( "damage",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_charBasic/damage.png' ))] ),
    ( "range",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_charBasic/range.png' ))] ),
    ( "tankGun",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_charBasic/tankGun.png' ))] ),
    // z_tuto_atgm
    ( "patton",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_atgm/patton.png' ))] ),
    ( "tow2",           MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/z_tuto_atgm/tow2.png' ))] ),
    //-------------------------------------------------------------------------------------
    // challenge
    ( "challenge_test",        MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/challenge/challenge_test.png' ))] ),
    ( "challenge_test_armory0",        MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/challenge/test_armory0.png' ))] ),
    ( "challenge_test_armory1",        MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/challenge/test_armory1.png' ))] ),

    // defense en profondeur
    ( "challenge_defense_1",        MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/challenge/challenge_defense_1.png' ))] ),

    //-------------------------------------------------------------------------------------
    // Steelman
    ( "Steelman_test_officier1",        MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/steelman/test_officier1.png' ))] ),
    ( "Steelman_test_officier2",        MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/steelman/test_officier2.png' ))] ),
    ( "Steelman_test_general1",        MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/steelman/test_general1.png' ))] ),
    ( "Steelman_test_regles",        MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/steelman/test_regles.png' ))] ),
    ( "Steelman_test_general2",        MAP [(~/ComponentState/Normal, TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/steelman/Steelman_test_general2b.png' ))] ),


    ]
)
//----------------------------------------------------------------------
// Liste des LDHintComponent
//----------------------------------------------------------------------
template PORTRAIT_PauseAndTexture
[
    TextureToken : string = "",
    IsBriefing : bool = false,
    IsHint : bool = false,
    VideoName : string = "",
    TexturePortrait : string = "",
    TextureSteelman : string = "",
    TextureSteelman_FullScreen : string = "",
    HasButtons : boolean = true,
    NoImage : boolean = false,
]
is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [0.0, 0.0]
        RelativeWidthHeight = [1.0, 1.0]
        MagnifiableOffset =  [0.0, 0.0]
        AlignementToFather = [0.0, 0.0]
        AlignementToAnchor = [0.0, 0.0]
    )

    HidePointerEvents = (<TextureSteelman_FullScreen> != "" ? true :
                            (<TextureSteelman> != "" ? true : false ))
    PointerEventsToAllow = ~/EAllowablePointerEventType/Move | ~/EAllowablePointerEventType/Button3 | ~/EAllowablePointerEventType/Scroll

    HasBackground = (<IsBriefing> ? true : false)
    BackgroundBlockColorToken = 'PureBlack'

    Components =
    [
        BUCKContainerDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [0.0, 0.0]
                RelativeWidthHeight = [1.0, 0.0]

                AlignementToFather = (<TexturePortrait> != "" ? [0.5,0]
                                            : (<NoImage> == true ? [0.5,0]
                                                : (<VideoName> != "" ? [0.5,1.0]
                                                    : [0.5, 1.0])))
                AlignementToAnchor = (<TexturePortrait> != "" ? [0.5,0]
                                            : (<NoImage> == true ? [0.5,0]
                                                : (<VideoName> != "" ? [0.5,1.0]
                                                    : [0.5, 1.0])))

                MagnifiableOffset = (<TextureSteelman> != "" ? [0,-250]
                                        :  (<TextureSteelman_FullScreen> != "" ? [0,0]
                                            : (<TexturePortrait> != "" ? [0,70]
                                                : (<NoImage> == true ? [0,150]
                                                    : (<VideoName> != "" ? [0.0,-200.0]
                                                    : [0.0, -200.0] )))))
            )

        Components =
        (<TexturePortrait> != "" ?
        [

            BUCKContainerDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [310,310]
                    AlignementToFather = [0.5, 0]
                    AlignementToAnchor = [0, 0]
                    MagnifiableOffset = [450,0]
                )

                Components =
                [
                    PanelRoundedCorner
                    (
                        RoundedVertexes = [false, false, true, true]
                        Radius = 5
                        BackgroundBlockColorToken = 'LDHintSolo_fond'
                        BorderLineColorToken = 'LDHintSolo_texte'
                        BorderThicknessToken = '2'
                    ),
                    BUCKTextureDescriptor
                    (
                        ComponentFrame = TUIFramePropertyRTTI
                        (
                         MagnifiableWidthHeight = [300,300]
                         AlignementToAnchor = [0.5, 0.5]
                         AlignementToFather = [0.5, 0.5]
                        )

                        TextureToken = <TexturePortrait>
                        TextureFrame = TUIFramePropertyRTTI
                        (
                            RelativeWidthHeight = [1,1]
                        )
                    )
                ]
            )
        ] : [] )

        +
        (<TextureToken> != "" ?
        [

            BUCKContainerDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [160,160]
                    AlignementToFather = [0.5, 1]
                    AlignementToAnchor = [1, 1]
                    MagnifiableOffset = [-450,0]
                )

                Components =
                [
                    PanelRoundedCorner
                    (
                        RoundedVertexes = [true, true, false, false]
                        Radius = 5
                        BackgroundBlockColorToken = 'LDHintSolo_fond'
                        BorderLineColorToken = 'LDHintSolo_texte'
                        BorderThicknessToken = '2'
                    ),
                    BUCKTextureDescriptor
                    (
                        ComponentFrame = TUIFramePropertyRTTI
                        (
                         MagnifiableWidthHeight = [150,150]
                         AlignementToAnchor = [0.5, 0.5]
                         AlignementToFather = [0.5, 0.5]
                        )

                        TextureToken = <TextureToken>
                        TextureFrame = TUIFramePropertyRTTI
                        (
                            RelativeWidthHeight = [1,1]
                        )
                    )
                ]
            )
        ] : [] )

        +

        (<VideoName> != "" ?
        [

            BUCKContainerDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [310,310]
                    AlignementToFather = [0.5, 1]
                    AlignementToAnchor = [1, 1]
                    MagnifiableOffset = [-450,0]
                )

                Components =
                [
                    PanelRoundedCorner
                    (
                        RoundedVertexes = [true, true, false, false]
                        Radius = 5
                        BackgroundBlockColorToken = 'LDHintSolo_fond'
                        BorderLineColorToken = 'LDHintSolo_texte'
                        BorderThicknessToken = '2'
                    ),
                    BUCKVideoDescriptor
                    (
                        ElementName = "BackgroundVideo"

                        ComponentFrame = TUIFramePropertyRTTI
                        (
                           MagnifiableWidthHeight = [300,300]
                           AlignementToAnchor = [0.5, 0.5]
                           AlignementToFather = [0.5, 0.5]
                        )

                        VideoDrawer  = $/UserInterface/UIVideoDrawer
                        Video        = TUIResourceVideo ( VideoFile =  <VideoName>  DicoVideo =  ~/DicoVideoOutGame)
                        VideoFrame   = TUIFramePropertyRTTI( RelativeWidthHeight = [1.,1.])
                    )
                ]
            )
        ] : [] )

        +

        (<TextureSteelman> != "" ?
        [

            BUCKTextureDescriptor
                    (
                        ComponentFrame = TUIFramePropertyRTTI
                        (
                         MagnifiableWidthHeight = [1280,704]
                         MagnifiableOffset = (<IsBriefing> ? [0,-80] : [0,0])
                         AlignementToAnchor = [0.5, 1]
                         AlignementToFather = [0.5, 1]
                        )

                        TextureToken = <TextureSteelman>
                        TextureFrame = TUIFramePropertyRTTI
                        (
                            RelativeWidthHeight = [1,1]
                        )
                    )
        ] : [] )

        +

        (<TextureSteelman_FullScreen> != "" ?
        [

            BUCKTextureDescriptor
                    (
                        ComponentFrame = TUIFramePropertyRTTI
                        (
                         MagnifiableWidthHeight = [1920,1080]

                         AlignementToAnchor = [0.5, 1]
                         AlignementToFather = [0.5, 1]
                        )

                        TextureToken = <TextureSteelman_FullScreen>
                        TextureFrame = TUIFramePropertyRTTI
                        (
                            RelativeWidthHeight = [1,1]
                        )
                    )
        ] : [] )

        +

        [
            BUCKListDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = (<TextureSteelman> != "" ? [1280.0, 0.0] : [900.0, 0.0])
                    AlignementToFather = (<TextureSteelman> != "" ? [0.5,0] : (<TexturePortrait> != "" ? [0.5,0] :  [0.5, 1]))
                    AlignementToAnchor = (<TextureSteelman> != "" ? [0.5,0] : (<TexturePortrait> != "" ? [0.5,0] :  [0.5, 1]))
                    MagnifiableOffset = (<IsBriefing> ? [0,-80] : (<TextureSteelman_FullScreen> != "" ? [0,-20] : [0,0]))

                )

                Axis = ~/ListAxis/Vertical
                //BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
                InterItemMargin = TRTTILength( Magnifiable = 0.0 )

                Elements =
                [
                    //Separateur du haut
                    BUCKListElementDescriptor
                    (
                        ComponentDescriptor = ~/LDHintTopBottomBorder
                    ),

                    //-------------------------------------------------------------------------------------
                    BUCKListElementDescriptor
                    (
                        ComponentDescriptor = BUCKTextDescriptor
                        (
                            ElementName = 'LDHintText'
                            ComponentFrame = TUIFramePropertyRTTI
                            (
                                MagnifiableWidthHeight = (<TextureSteelman> != "" ? [1280.0, 0.0] : [900.0, 0.0])
                            )

                            ParagraphStyle = TParagraphStyleRTTI
                            (
                                Alignment = UIText_Center
                                VerticalAlignment = UIText_VerticalCenter
                                BigWordAction = ~/BigWordAction/BigWordNewLine
                                InterLine = 0.5
                            )
                            TextStyle = "Default"

                            HorizontalFitStyle = ~/FitStyle/UserDefined
                            VerticalFitStyle = ~/FitStyle/FitToContent

                            TextPadding = TRTTILength4 (Magnifiable = [10,0,10,0])

                            TypefaceToken = (<TexturePortrait> != "" ? "Eurostyle_Italic" : (<NoImage> == true ? "Eurostyle_Italic" : "Eurostyle"))
                            BigLineAction = ~/BigLineAction/MultiLine
                            ColorMode = ~/ColorMode/Override

                            UniformDrawer = $/UserInterface/UIUniformDrawer

                            TextColor = (<TexturePortrait> != "" ? "LDHintSolo_texte_or" : (<NoImage> == true ? "LDHintSolo_texte_or" : "LDHintSolo_texte"))
                            TextSize = "22"

                            TextDico = ~/LocalisationConstantes/dico_interface_ingame
                        )
                    ),


                    //-------------------------------------------------------------------------------------

                    BUCKListElementDescriptor
                    (
                        ExtendWeight = 1
                        ComponentDescriptor = ~/LDHintSeparatorBetweenContentAndButtons
                    ),

                ]

                +
                (<HasButtons> == true ?
                [

                    //Boutons
                    BUCKListElementDescriptor
                    (
                        ComponentDescriptor = BUCKListDescriptor
                        (
                            ElementName = 'LDHintButtonList'
                            ComponentFrame = TUIFramePropertyRTTI
                            (
                                MagnifiableWidthHeight = [0.0, 0.0]
                                //MagnifiableOffset = ( <TextureToken> != '' ? [-40.0, 0.0] : [0, 0])
                                AlignementToFather = [0.5, 0]
                                AlignementToAnchor = [0.5, 0]
                            )

                            Axis = ~/ListAxis/Horizontal
                            BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
                            InterItemMargin = TRTTILength( Magnifiable = ~/LDHintMagnifiableInterButtonMargin )

                            Elements =
                            [
                                // envoie LDHintDefaultButton
                            ]
                        )
                    ),
                ] : [] )
                +

                [
                    //Separateur du bas
                    BUCKListElementDescriptor
                    (
                        ComponentDescriptor = ~/LDHintTopBottomBorder
                    ),
                ]

                BackgroundComponents =
                [
                    PanelRoundedCorner
                    (
                        RoundedVertexes =
                            ( <TextureToken> != '' ? [false, false, true, true]
                                : ( <VideoName> != '' ? [false, false, true, true]
                                    : ( <TexturePortrait> != '' ? [true, true , false, false]
                                        : [true, true, true, true] ) ) )

                        Radius = 5
                        BackgroundBlockColorToken = 'LDHintSolo_fond'
                        BorderLineColorToken = 'LDHintSolo_texte'
                        BorderThicknessToken = '2'
                    )
                ]
            )
        ]
        ),

    ]
)
private LDHintDefaultComponent is LDHintStandardComponentWithPause()
private LDHintDefaultComponentWithoutPause is LDHintStandardComponent
(
    HasButtons = false
    ComponentFrame = TUIFramePropertyRTTI(
        MagnifiableWidthHeight = [1200.0, 0.0]
        MagnifiableOffset = [0.0, 300.0]
        AlignementToFather = [0.5, 0.0]
        AlignementToAnchor = [0.5, 0.0]
    )
)

private LDHintDefaultComponentWithoutPause_2 is BUCKContainerDescriptor
(

    ComponentFrame = TUIFramePropertyRTTI(

    MagnifiableWidthHeight = [600.0, 80.0]
    MagnifiableOffset = [0.0, 300.0]
    AlignementToFather = [0.5, 0.0]
    AlignementToAnchor = [0.5, 0.0]
    )

    Components =
    [
        PanelRoundedCorner
        (
            BorderLineColorToken = 'LDHintSolo_texte'
            BackgroundBlockColorToken = 'LDHintSolo_fond'
        ),
        BUCKTextDescriptor
        (

            ElementName = 'LDHintText'
            ComponentFrame = TUIFramePropertyRTTI(

            RelativeWidthHeight = [1,1]

            )



            ParagraphStyle = ~/LDHintParagraphStyleCentered
            TextStyle = "Default"

            HorizontalFitStyle = ~/FitStyle/UserDefined
            VerticalFitStyle = ~/FitStyle/UserDefined

            TypefaceToken = "SevenSegments"
            BigLineAction = ~/BigLineAction/MultiLine

            UniformDrawer = $/UserInterface/UIUniformDrawer

            TextColor = "LDHintSolo_texte_or"
            TextSize = "46"

            TextDico = ~/LocalisationConstantes/dico_interface_ingame
        )
    ]
)



LDHintCampaign_PortraitHintPauseTexture is TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/hint.png' )
LDHintCampaign_InfoTexture is TUIResourceTexture_InGame( FileName='GameData:/Assets/2D/Interface/UseInGame/LDHint/icone_info.png' )

private LDHintAlertComponent is LDHintStandardComponent
(
    TextureToken = "LDHintCampaign_InfoTexture"
    TextureMagnifiableWidthHeight = [32,32]
)

private LDHintRemainingTimeAlertComponent is LDHintStandardComponent( TextSize = "19" )
private LDHintSuddenDeathAlertComponent is LDHintStandardComponent(     TextureToken = "LDHintCampaign_InfoTexture"
    TextureMagnifiableWidthHeight = [32,32] TextSize = "19" )
private LDHintConquestLocalPlayerHasAdvantageComponent is LDHintStandardComponent( TextSize = "19" BackgroundBlockColorToken = "SD2_BleuGris" BorderLineColorToken = 'SD2_LigneBleuGris')
private LDHintConquestOpponentHasAdvantageComponent is LDHintStandardComponent( TextSize = "19" )

private LDHintLocalPlayerAllianceMoralComponent is LDHintStandardComponent( TextSize = "19" BackgroundBlockColorToken = "SD2_BleuGris" BorderLineColorToken = 'SD2_LigneBleuGris')
private LDHintEnemyAllianceMoralComponent is LDHintStandardComponent( TextSize = "19" )

//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//   TOUT CE QUI EST SOUS CETTE LIGNE EST POUR LES DEV UNIQUEMENT
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
// Templates standard
//----------------------------------------------------------------------

template LDHintStandardComponent
[
    ComponentFrame : TUIFramePropertyRTTI = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [700.0, 0.0]
        MagnifiableOffset = [0.0, 300.0]
        AlignementToFather = [0.5, 0.0]
        AlignementToAnchor = [0.5, 0.0]
    ),
    TextureToken : string = "",
    HasButtons : bool = false,
    BorderLineColorToken : string = 'H2_bleu_2',
    BackgroundBlockColorToken : string = 'H2_bleu_2',
    TextColor : string = "BoutonTemps",
    TextSize : string = "30",
    DimensionPourTexte : int = 750,
    TextureMagnifiableWidthHeight : float2 = [150,150],

]
is BUCKListDescriptor
(
    ComponentFrame = <ComponentFrame>

    Axis = ~/ListAxis/Vertical
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromFrameProperty

    Elements =
    [
        //Separateur du haut
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/LDHintTopBottomBorder
        ),

        //Contenu
        BUCKListElementDescriptor
        (
            ComponentDescriptor = LDHintStandardContentHorizontalList
            (
                TextureToken = <TextureToken>
                TextColor = <TextColor>
                TextSize = <TextSize>
                DimensionPourTexte = <DimensionPourTexte>
                TextureMagnifiableWidthHeight = <TextureMagnifiableWidthHeight>

            )
        ),
    ]
    +
    (<HasButtons> ?
    [
        //Separateur entre contenu et boutons
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/LDHintSeparatorBetweenContentAndButtons
        ),

        //Boutons
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/LDHintDefaultButtonContainer
        ),
    ]
    :
    [])
    +
    [
           //Separateur du bas
           BUCKListElementDescriptor
           (
               ComponentDescriptor = ~/LDHintTopBottomBorder
           ),
       ]

    BackgroundComponents =
    [
            PanelRoundedCorner
            (
                BackgroundBlockColorToken = <BackgroundBlockColorToken>
                BorderLineColorToken = <BorderLineColorToken>
            )
    ]
)

template LDHintStandardComponentWithPause
[
    ComponentFrame : TUIFramePropertyRTTI = TUIFramePropertyRTTI(
        MagnifiableWidthHeight = [700.0, 0.0]
        MagnifiableOffset = [0.0, 300.0]
        AlignementToFather = [0.5, 0.0]
        AlignementToAnchor = [0.5, 0.0]
    ),
    TextureToken : string = ""
]
is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [0.0, 0.0]
        RelativeWidthHeight = [1.0, 1.0]
        MagnifiableOffset = [0.0, 0.0]
        AlignementToFather = [0.0, 0.0]
        AlignementToAnchor = [0.0, 0.0]
    )

    HidePointerEvents = true

    Components =
    [
        LDHintStandardComponent
        (
            ComponentFrame = <ComponentFrame>
            TextureToken = <TextureToken>
            HasButtons = true
        )
    ]
)

template LDHintStandardContentHorizontalList
[
    TextureToken : string = "",
    TextColor : string = "SD2_Blanc184",
    TextSize : string = "30",
    DimensionPourTexte : int,
    TextureMagnifiableWidthHeight : float2 = [150,150],
]
is BUCKListDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [0.0, 0.0]
        RelativeWidthHeight = [0.0, 0.0]
        MagnifiableOffset = [0.0, 0.0]
        AlignementToFather = [0.0, 0.0]
        AlignementToAnchor = [0.0, 0.0]
    )

    Axis = ~/ListAxis/Horizontal
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
    InterItemMargin = TRTTILength( Magnifiable = 0.0 )


    Elements =
    (<TextureToken> != "" ?
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/LDHintRightLeftBorder
            ExtendWeight = 1
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = LDHintDefaultTexture
            (
                TextureToken = <TextureToken>
                TextureMagnifiableWidthHeight = <TextureMagnifiableWidthHeight>
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/LDHintSeparatorBetweenTextureAndText
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/LDHintDefaultTextLeftAligned
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/LDHintRightLeftBorder
            ExtendWeight = 1
        ),
    ]
    :
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/LDHintRightLeftBorder
            ExtendWeight = 1
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = LDHintDefaultTextCentered ( TextColor = <TextColor> TextSize = <TextSize> DimensionPourTexte = <DimensionPourTexte>)
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = ~/LDHintRightLeftBorder
            ExtendWeight = 1
        ),
    ])
)

template LDHintDefaultTexture
[
    TextureToken : string = "",
    TextureMagnifiableWidthHeight : float2 = [106, 150]
]
is BUCKTextureDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = <TextureMagnifiableWidthHeight>
        AlignementToFather = [0.0, 0.5]
        AlignementToAnchor = [0.0, 0.5]
    )

    TextureToken = <TextureToken>
    TextureFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1,1]
    )
)
//----------------------------------------------------------------------------------
//template pour diapo
//----------------------------------------------------------------------------------
// MiseEnScene
//-------------------------------------------------------------------------------------
TitreMissionFullscreen is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1,1]
    )

    HasBackground = true
    BackgroundBlockColorToken = 'Noir'

    Components =
    [
        BUCKTextDescriptor
        (
            ElementName = 'LDHintText'
            ComponentFrame = TUIFramePropertyRTTI
            (

                AlignementToFather = [0.5, 0.5]
                AlignementToAnchor = [0.5, 0.5]
            )

            ParagraphStyle = TParagraphStyleRTTI
            (
                Alignment = UIText_Center
                VerticalAlignment = UIText_VerticalCenter
                BigWordAction = ~/BigWordAction/BigWordNewLine
                InterLine = 0.5
            )
            TextStyle = "Default"

            HorizontalFitStyle = ~/FitStyle/FitToContent
            VerticalFitStyle = ~/FitStyle/FitToContent

            TypefaceToken = "Eurostyle"
            BigLineAction = ~/BigLineAction/MultiLine
            ColorMode = ~/ColorMode/Override

            UniformDrawer = $/UserInterface/UIUniformDrawer

            TextColor = "Blanc"
            TextSize = "65"

            TextDico = ~/LocalisationConstantes/dico_interface_ingame
        )
    ]
)

template challenge
[
TextureToken : string = "",
] is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1,1]

        )


    Components =
    [
        BUCKContainerDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [1920,1080]
                MagnifiableOffset = [0,0]
                )
            Components =
            [
                BUCKTextureDescriptor
                (
                    ComponentFrame = TUIFramePropertyRTTI
                    (
                        RelativeWidthHeight = [1,1]
                        //MagnifiableWidthHeight = [1980,1200]
                    )
                    TextureToken = <TextureToken>
                ),

                LDHintDefaultButtonContainer,
                BUCKTextDescriptor
                (
                    ElementName = 'LDHintText'
                    ComponentFrame = TUIFramePropertyRTTI
                    (
                        //RelativeWidthHeight = [1.0, 0.0]
                        MagnifiableWidthHeight = [500.0, 0.0]
                        MagnifiableOffset = [0.0, 0.0]
                        AlignementToFather = [0.0, 0.0]
                        AlignementToAnchor = [0.0, 0.0]
                    )

                    ParagraphStyle = TParagraphStyleRTTI
                    (
                        Alignment = UIText_Left
                        VerticalAlignment = UIText_VerticalCenter
                        BigWordAction = ~/BigWordAction/BigWordNewLine
                        InterLine = 0.5
                    )
                    TextStyle = "Default"

                    HorizontalFitStyle = ~/FitStyle/UserDefined
                    VerticalFitStyle = ~/FitStyle/FitToContent

                    TypefaceToken = "Eurostyle"
                    BigLineAction = ~/BigLineAction/MultiLine
                    ColorMode = ~/ColorMode/Override

                    UniformDrawer = $/UserInterface/UIUniformDrawer

                    TextColor = "BlancEquipe"
                    TextSize = "22"

                    TextDico = ~/LocalisationConstantes/dico_interface_ingame
                )
            ]
        )
    ]
)
//-------------------------------------------------------------------------------------
// SPOTLIGHT
//-------------------------------------------------------------------------------------
template Spotlight_LD
[
    MagnifiableWidthHeight : float2 = [120.0, 35.0],
    MagnifiableOffset : float2 = [0,0],
    AlignementToAnchor : float2  = [0.0, 0.0],
    AlignementToFather : float2 = [0.0, 0.0],
    UniqueName : string,
]
 is BUCKContainerDescriptor // tutologistic base 1
(
    UniqueName = <UniqueName>
    SpotlightComponent = SpotlightDescriptor()
    HasBorder= true
    BorderLineColorToken = 'CyanChrono'
    BorderThicknessToken = '1'

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight  = <MagnifiableWidthHeight>
        MagnifiableOffset       = <MagnifiableOffset>
        AlignementToAnchor      = <AlignementToAnchor>
        AlignementToFather      = <AlignementToFather>
        )
)

Spotlight_test is BUCKContainerDescriptor // tutologistic base 1
(
    UniqueName = "Spotlight_test"
    SpotlightComponent = SpotlightDescriptor()
    HasBorder= true
    BorderLineColorToken = 'CyanChrono'
    BorderThicknessToken = '1'

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [120.0, 35.0]
        MagnifiableOffset = [20,3]
        )
)

//-------------------------------------------------------------------------------------
Spotlight_mortier is BUCKContainerDescriptor
(
    UniqueName = "Spotlight_mortier"
    SpotlightComponent = SpotlightDescriptor()
    HasBorder= true
    BorderLineColorToken = 'CyanChrono'
    BorderThicknessToken = '1'

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [124.0, 46.0]
        MagnifiableOffset = [-262,-44]
        AlignementToAnchor = [1.0, 1.0]
        AlignementToFather = [1.0, 1.0]
        )
)
//-------------------------------------------------------------------------------------
Spotlight_sellUnit is BUCKContainerDescriptor
(
    UniqueName = "Spotlight_sellUnit"
    SpotlightComponent = SpotlightDescriptor()
    HasBorder= true
    BorderLineColorToken = 'CyanChrono'
    BorderThicknessToken = '1'

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [124.0, 46.0]
        MagnifiableOffset = [-14,-44]
        AlignementToAnchor = [1.0, 1.0]
        AlignementToFather = [1.0, 1.0]
        )
)
//-------------------------------------------------------------------------------------
template SuperHint
[
    alignementGauche : boolean = true
]
 is BUCKListDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableOffset = (<alignementGauche> ? [10,45] : [-10,45])
        MagnifiableWidthHeight = [360.0, 0.0]
        AlignementToAnchor = (<alignementGauche> ? [0.0, 0.0] : [1,0] )
        AlignementToFather = (<alignementGauche> ? [0.0, 0.0] : [1,0] )
    )
    //BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
    FirstMargin = TRTTILength ( Magnifiable = 10)
    InterItemMargin = TRTTILength( Magnifiable = 20.0 )
    LastMargin = TRTTILength( Magnifiable = 10.0 )
    Axis = ~/ListAxis/Vertical
    Elements =
    [
    BUCKListElementDescriptor
    (
        ComponentDescriptor = BUCKTextDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1,0]
                MagnifiableWidthHeight = [-40,0]
                AlignementToAnchor = [0.5, 0.0]
                AlignementToFather = [0.5, 0.0]

            )

            ParagraphStyle = TParagraphStyleRTTI
            (
                Alignment = UIText_Left
                VerticalAlignment = UIText_VerticalCenter
                BigWordAction = ~/BigWordAction/BigWordNewLine
                InterLine = 0.5
            )
            TextStyle = "Default"
            TextToken = 'OBJ_NEWI'
            HorizontalFitStyle = ~/FitStyle/UserDefined
            VerticalFitStyle = ~/FitStyle/FitToContent



            TypefaceToken = "Eurostyle_Heavy"
            BigLineAction = ~/BigLineAction/MultiLine
            ColorMode = ~/ColorMode/Override

            UniformDrawer = $/UserInterface/UIUniformDrawer

            TextColor = "ObjectiveLabel/Primary/Title"
            TextSize = "30"

            TextDico = ~/LocalisationConstantes/dico_interface_ingame
        )
    ),
    BUCKListElementDescriptor
    (
        ComponentDescriptor = BUCKTextDescriptor
        (
            ElementName = 'LDHintText'
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1,0]
                MagnifiableWidthHeight = [-50,0]
                AlignementToAnchor = [0.5, 0.0]
                AlignementToFather = [0.5, 0.0]
            )

            ParagraphStyle = TParagraphStyleRTTI
            (
                Alignment = UIText_Left
                VerticalAlignment = UIText_VerticalCenter
                BigWordAction = ~/BigWordAction/BigWordNewLine
                InterLine = 0.5
            )
            TextStyle = "Default"

            HorizontalFitStyle = ~/FitStyle/UserDefined
            VerticalFitStyle = ~/FitStyle/FitToContent



            TypefaceToken = "Eurostyle"
            BigLineAction = ~/BigLineAction/MultiLine
            ColorMode = ~/ColorMode/Override

            UniformDrawer = $/UserInterface/UIUniformDrawer

            TextColor = "BlancEquipe"
            TextSize = "16"

            TextDico = ~/LocalisationConstantes/dico_interface_ingame
        )
    )
    ]

    BackgroundComponents =
    [
        PanelRoundedCorner ()
    ]
)


//-------------------------------------------------------------------------------------

template PORTRAIT_Narration
[
    TextureToken : string = "",
    IsHint : bool = false,
]
is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [0.0, 0.0]
        RelativeWidthHeight = [1.0, 1.0]
        MagnifiableOffset =  [0.0, 0.0]
        AlignementToFather = [0.0, 0.0]
        AlignementToAnchor = [0.0, 0.0]
    )

    HidePointerEvents = true
    PointerEventsToAllow = ~/EAllowablePointerEventType/Move | ~/EAllowablePointerEventType/Button3 | ~/EAllowablePointerEventType/Scroll

    Components =
    [
        BUCKListDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [0.0, 0.0]
                MagnifiableOffset = [0.0, -200.0]
                AlignementToFather = [0.5, 1.0]
                AlignementToAnchor = [0.5, 1.0]
            )

            Axis = ~/ListAxis/Horizontal
            BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

            Elements =
            [
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = BUCKListDescriptor
                    (
                        ComponentFrame = TUIFramePropertyRTTI
                        (
                        )

                        Axis = ~/ListAxis/Horizontal
                        BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestBetweenFatherAndChildren

                        Elements =
                        [
                            //Separator
                            BUCKListElementDescriptor
                            (
                                ComponentDescriptor = ~/LDHintSeparatorBetweenTextureAndText
                            ),
                            ///Content
                            BUCKListElementDescriptor
                            (
                                ComponentDescriptor = BUCKListDescriptor
                                (
                                    ComponentFrame = TUIFramePropertyRTTI
                                    (
                                        MagnifiableWidthHeight = [800, 0.0]
                                    )

                                    Axis = ~/ListAxis/Vertical
                                    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromFrameProperty
                                    InterItemMargin = TRTTILength( Magnifiable = 0.0 )

                                    Elements =
                                    [
                                        //Separateur du haut
                                        BUCKListElementDescriptor
                                        (
                                            ComponentDescriptor = ~/LDHintTopBottomBorder
                                        ),

                                        BUCKListElementDescriptor
                                        (
                                            ComponentDescriptor = BUCKTextDescriptor
                                            (
                                                ElementName = 'LDHintText'
                                                ComponentFrame = TUIFramePropertyRTTI
                                                (
                                                    RelativeWidthHeight = [1.0, 0.0]
                                                    MagnifiableWidthHeight = [0.0, 0.0]
                                                    MagnifiableOffset = [0.0, 0.0]
                                                    AlignementToFather = [0.0, 0.0]
                                                    AlignementToAnchor = [0.0, 0.0]
                                                )

                                                ParagraphStyle = TParagraphStyleRTTI
                                                (
                                                    Alignment = UIText_Center
                                                    VerticalAlignment = UIText_VerticalCenter
                                                    BigWordAction = ~/BigWordAction/BigWordNewLine
                                                    InterLine = 0.5
                                                )
                                                TextStyle = "Default"

                                                HorizontalFitStyle = ~/FitStyle/UserDefined
                                                VerticalFitStyle = ~/FitStyle/FitToContent

                                                TypefaceToken = "UIMainFont"
                                                BigLineAction = ~/BigLineAction/MultiLine
                                                ColorMode = ~/ColorMode/Override

                                                UniformDrawer = $/UserInterface/UIUniformDrawer

                                                TextColor = "BlancEquipe"
                                                TextSize = "30"

                                                TextDico = ~/LocalisationConstantes/dico_interface_ingame
                                            )
                                        ),
                                        //Separateur du bas
                                        BUCKListElementDescriptor
                                        (
                                            ComponentDescriptor = ~/LDHintTopBottomBorder
                                        ),
                                    ]
                                )
                            ),

                            //Separator
                            BUCKListElementDescriptor
                            (
                                ComponentDescriptor = ~/LDHintCampaignRightBorder
                            ),
                            // autre container pour symetrie
                            BUCKListElementDescriptor
                            (
                                ComponentDescriptor = BUCKContainerDescriptor
                                (
                                    ComponentFrame = TUIFramePropertyRTTI (MagnifiableWidthHeight = [0,0])
                                )
                            ),
                        ]

                        BackgroundComponents =
                        [
                            PanelRoundedCorner
                            (
                                Radius = 10
                                RoundedVertexes =  [true, true, false, false]
                                BackgroundBlockColorToken = 'H2_bleu_2'
                            )
                        ]
                    )
                ),
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = BUCKListDescriptor
                    (
                        ComponentFrame = TUIFramePropertyRTTI()

                        Axis = ~/ListAxis/Horizontal
                        BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestBetweenFatherAndChildren
                        FirstMargin = TRTTILength (Magnifiable = 5)
                        LastMargin = TRTTILength (Magnifiable = 5)
                        Elements =
                        [
                            //Portraits
                            BUCKListElementDescriptor
                            (
                                ComponentDescriptor = LDHintCampaignPortraitTexture
                                (
                                    TextureToken = <TextureToken>
                                    TextureMagnifiableWidthHeight = (<IsHint> == true ? [150,150] : [100,150])
                                )
                            ),
                        ]
                        BackgroundComponents = [ PanelRoundedCorner( Radius = 10 RoundedVertexes = [false, false, true, true]) ]
                    )
                )
            ]
        )
    ]
)
//-------------------------------------------------------------------------------------

template MES_PauseAndTexture
[
    TextureToken : string = "",
    AlignementToFather : float2 = [1.0, 1.0],
    AlignementToAnchor : float2 = [1.0, 1.0],
    MagnifiableOffset : float2 = [0.0, 0.0],
]
is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1, 1]
    )
    HasBackground = true
    BackgroundBlockColorToken = "SD2_Noir80"

    Components =
    [
        BUCKContainerDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [1347.0,734.0]
                AlignementToFather = [0.5, 1]
                AlignementToAnchor = [0.5, 1]
                MagnifiableOffset = [0.0, -195.0]
            )

            Components =
            [
            BUCKTextureDescriptor
            (


                ElementName = "DiapoContainer"
                ComponentFrame = TUIFramePropertyRTTI
                (
                    RelativeWidthHeight = [1,1]
                    AlignementToFather = [0.5, 1]
                    AlignementToAnchor = [0.5, 1]
                    //MagnifiableOffset = [0.0, -195.0]
                )

                TextureToken = <TextureToken>
                TextureFrame = TUIFramePropertyRTTI
                                (
                                    //MagnifiableWidthHeight = [0.0, 735.0]
                                    //RelativeWidthHeight = [1,1]
                                     //MagnifiableWidthHeight = [1347.0,734.0]
                                    AlignementToFather = <AlignementToFather>
                                    AlignementToAnchor = <AlignementToAnchor>
                                    //MagnifiableOffset = <MagnifiableOffset>
                                )
                HasBackground = false
                BackgroundBlockColorToken = 'Orange'
                ResizeMode = ~/TextureResizeMode/FitToParentConservingRatio
            ),
            ]
        ),

        BUCKContainerDescriptor
        (
            //HasBackground = true
            BackgroundBlockColorToken = 'Vert'
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [1347,95]
                //RelativeWidthHeight = [1, 0]
                MagnifiableOffset = [0.0, -95.0]
                AlignementToFather = [0.5, 1]
                AlignementToAnchor = [0.5, 1]
            )

            HidePointerEvents = true

            Components =
            [
                LDHintStandardComponent //liste verticale
                (
                    ComponentFrame = TUIFramePropertyRTTI
                    (
                        //MagnifiableWidthHeight = [700.0, 0.0]
                        RelativeWidthHeight = [1,0]
                        //MagnifiableOffset = [0.0, 300.0]
                        AlignementToFather = [0.5, 0.0]
                        AlignementToAnchor = [0.5, 0.0]
                    )
                    //TextureToken = <TextureToken>
                    HasButtons = true
                    DimensionPourTexte = 1300

                )
            ]
        )
    ]
)

//-------------------------------------------------------------------------------------
// hint
//-------------------------------------------------------------------------------------
template Hint_PauseAndTexture
[
    TextureToken : string = "",

]
is BUCKListDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [842,0]
        AlignementToFather = [0.5,0.5]
        AlignementToAnchor = [0.5,0.5]
    )
    MagnifierMultiplication = 1.2
    Axis = ~/ListAxis/Vertical
    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKTextDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [0, 55]
                    RelativeWidthHeight = [1,0]
                )

                ParagraphStyle = ~/paragraphStyleTextCenter
                TextStyle = "Default"

                HorizontalFitStyle = ~/FitStyle/UserDefined
                VerticalFitStyle = ~/FitStyle/UserDefined

                TypefaceToken = "UIMainFont"
                BigLineAction = ~/BigLineAction/MultiLine
                ColorMode = ~/ColorMode/Override

                UniformDrawer = $/UserInterface/UIUniformDrawer
                //TextPadding = TRTTILength4(Magnifiable = [8.0, 8.0, 8.0, 8.0])
                TextColor = "Blanc"
                TextSize = "30"
                TextToken = 'ldhint'
                TextDico = ~/LocalisationConstantes/dico_interface_ingame

            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKListDescriptor
            (

                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight =[0,408]
                    AlignementToFather = [0.5,0]
                    AlignementToAnchor = [0.5,0]
                )

                Axis = ~/ListAxis/Horizontal
                InterItemMargin = TRTTILength (Magnifiable = 10)
                Elements =
                [
                    BUCKListElementDescriptor
                    (
                        ComponentDescriptor = BUCKTextureDescriptor
                        (
                            HasBackground = true
                            BackgroundBlockColorToken = "SD2_Noir80"

                            ElementName = "DiapoContainer"
                            ComponentFrame = TUIFramePropertyRTTI
                            (
                                MagnifiableWidthHeight = [408.0, 408.0]

                            )

                            TextureToken = <TextureToken>
                            TextureFrame = TUIFramePropertyRTTI
                            (
                                MagnifiableWidthHeight = [408.0, 408.0]

                            )

                            ResizeMode = ~/TextureResizeMode/UserDefined
                        )
                    ),
                    BUCKListElementDescriptor
                    (
                        ComponentDescriptor = BUCKTextDescriptor
                        (
                            ElementName = 'LDHintText'
                            ComponentFrame = TUIFramePropertyRTTI
                                (
                                    MagnifiableWidthHeight = [408.0, 408.0]

                                )
                            //HasBackground = true
                            BackgroundBlockColorToken = 'Orange'
                            ParagraphStyle = ~/paragraphStyleTextCenter
                            TextStyle = "Default"

                            HorizontalFitStyle = ~/FitStyle/UserDefined
                            VerticalFitStyle = ~/FitStyle/UserDefined

                            TypefaceToken = "UIMainFont"
                            BigLineAction = ~/BigLineAction/MultiLine
                            ColorMode = ~/ColorMode/Override

                            UniformDrawer = $/UserInterface/UIUniformDrawer
                            TextPadding = TRTTILength4(Magnifiable = [8.0, 8.0, 8.0, 8.0])
                            TextColor = "Blanc"
                            TextSize = "30"

                            TextDico = ~/LocalisationConstantes/dico_interface_ingame

                            Components = [PanelRoundedCorner()]
                        )


                    )

                ]
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKContainerDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [0,15]
                    RelativeWidthHeight = [1,0]
                    )

                //Components = [~/LDHintDefaultButtonContainer]
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = LDHintDefaultButtonContainer
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKContainerDescriptor
            (
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [0,15]
                    RelativeWidthHeight = [1,0]
                    )

                //Components = [~/LDHintDefaultButtonContainer]
            )
        ),

    ]

    BackgroundComponents =
    [
        PanelRoundedCorner()
    ]
)

//----------------------------------------------------------------------
// Templates campagne
//----------------------------------------------------------------------

template LDHintCampaignPortraitTexture
[
    TextureToken : string = "",
    TextureMagnifiableWidthHeight : float2 = [150,150]
]
is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = <TextureMagnifiableWidthHeight>
        PixelWidthHeight = [0.0, 2 * ~/DistanceBetweenExternalAndInternalBorder]
        MagnifiableOffset = [0.0, 0.0]
        AlignementToFather = [0.0, 0.5]
        AlignementToAnchor = [0.0, 0.5]
    )

    Components =
    [
        BUCKTextureDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = <TextureMagnifiableWidthHeight>
                AlignementToFather = [0.0, 0.5]
                AlignementToAnchor = [0.0, 0.5]
            )

            TextureToken = <TextureToken>
            TextureFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1,1]
            )
        )
    ]
)

//----------------------------------------------------------------------
// Sous composants
//----------------------------------------------------------------------

private LDHintMagnifiableBorderSize is 15.0
private LDHintMagnifiableLengthBetweenTextureAndText is 15.0
private LDHintMagnifiableLengthBetweenTextAndRightBorder is 15.0
private LDHintMagnifiableInterItemBetweenTextAndPauseButton is 15.0

private LDHintTopBottomBorder is BUCKContainerDescriptor
(

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [1.0, LDHintMagnifiableBorderSize]
    )
)

private LDHintRightLeftBorder is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [LDHintMagnifiableBorderSize, 1.0]
    )
)

private LDHintSeparatorBetweenTextureAndText is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [LDHintMagnifiableLengthBetweenTextureAndText, 1.0]
    )
)

private LDHintCampaignLeftBorder is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        PixelWidthHeight = [~/DistanceBetweenExternalAndInternalBorder, 1.0]
    )
)

private LDHintCampaignRightBorder is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [LDHintMagnifiableLengthBetweenTextAndRightBorder + ~/DistanceBetweenExternalAndInternalBorder, 1.0]
    )
)

private LDHintSeparatorBetweenContentAndButtons is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [1.0, LDHintMagnifiableInterItemBetweenTextAndPauseButton]
    )
)

template LDHintDefaultTextCentered
[
    TextColor : string = "Orange",
    TextSize : string = "30",
    DimensionPourTexte : int = 900,
]
is BUCKTextDescriptor
(
    ElementName = 'LDHintText'
    ComponentFrame = TUIFramePropertyRTTI
        (
            MagnifiableWidthHeight = [<DimensionPourTexte>, 0.0]
        )

    ParagraphStyle = ~/LDHintParagraphStyleCentered
    TextStyle = "Default"

    HorizontalFitStyle = ~/FitStyle/UserDefined
    VerticalFitStyle = ~/FitStyle/FitToContent

    TypefaceToken = "UIMainFont"
    BigLineAction = ~/BigLineAction/MultiLine
    ColorMode = ~/ColorMode/Override

    UniformDrawer = $/UserInterface/UIUniformDrawer

    TextColor = <TextColor>
    TextSize = <TextSize>

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
)

private LDHintCampaignText is BUCKTextDescriptor
(
    ElementName = 'LDHintText'
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 0.0]
        MagnifiableWidthHeight = [0.0, 0.0]
        MagnifiableOffset = [0.0, 0.0]
        AlignementToFather = [0.0, 0.0]
        AlignementToAnchor = [0.0, 0.0]
    )

    ParagraphStyle = ~/LDHintParagraphStyleLeftAligned
    TextStyle = "Default"

    HorizontalFitStyle = ~/FitStyle/UserDefined
    VerticalFitStyle = ~/FitStyle/FitToContent

    TypefaceToken = "Courrier"
    BigLineAction = ~/BigLineAction/MultiLine
    ColorMode = ~/ColorMode/Override

    UniformDrawer = $/UserInterface/UIUniformDrawer

    TextColor = "BlancEquipe"
    TextSize = "22"

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
)

private LDHintCampaignText_left is BUCKTextDescriptor
(
    ElementName = 'LDHintText'
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 0.0]
        MagnifiableWidthHeight = [0.0, 0.0]
        MagnifiableOffset = [0.0, 0.0]
        AlignementToFather = [0.0, 0.0]
        AlignementToAnchor = [0.0, 0.0]
    )

    ParagraphStyle = ~/LDHintParagraphStyleLeftAlignedExact
    TextStyle = "Default"

    HorizontalFitStyle = ~/FitStyle/UserDefined
    VerticalFitStyle = ~/FitStyle/FitToContent

    TypefaceToken = "UIMainFont"
    BigLineAction = ~/BigLineAction/MultiLine
    ColorMode = ~/ColorMode/Override

    UniformDrawer = $/UserInterface/UIUniformDrawer

    TextColor = "Orange"
    TextSize = "20"

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
)

private LDHintDefaultTextLeftAligned is BUCKTextDescriptor
(
    ElementName = 'LDHintText'
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [0.0, 0.0]
        MagnifiableWidthHeight = [500, 0.0]
        MagnifiableOffset = [0.0, 0.0]
        AlignementToFather = [0.0, 0.5]
        AlignementToAnchor = [0.0, 0.5]
    )

    ParagraphStyle = ~/LDHintParagraphStyleLeftAligned
    TextStyle = "Default"

    HorizontalFitStyle = ~/FitStyle/MinBetweenUserDefinedAndContent
    VerticalFitStyle = ~/FitStyle/FitToContent

    TypefaceToken = "UIMainFont"
    BigLineAction = ~/BigLineAction/MultiLine

    UniformDrawer = $/UserInterface/UIUniformDrawer

    TextColor = "Orange"
    TextSize = "20"

    TextDico = ~/LocalisationConstantes/dico_interface_ingame
)

{private LDHintDefaultButton is HUDDarkButton
(
    ElementName = 'LDHintPauseButton'

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [120.0, 30.0]
        MagnifiableOffset = [0.0, 0.0]
        AlignementToFather = [0.0, 0.0]
        AlignementToAnchor = [0.0, 0.0]
    )

    HasText = true
    TextParagraphStyle = ~/LDHintParagraphStyleCentered
    TextStyle = "Default"

    Mapping = TEugBMutablePBaseClass( Value = TUserInputMapping( KeyboardEventID = UserInputKeyboard/KEY_ENTER ) )

    TextSizeToken = "SD2_Petit"
    HidePointerEvents = true

    HintTitleToken = ""
    HintBodyToken = ""
    HintExtendedToken = ""
    HintDico = ~/LocalisationConstantes/dico_interface_ingame
)}

private LDHintDefaultButton is ConfirmButton
(
    ElementName = "LDHintPauseButton"
    //TextToken = ''

    //HintableAreaElementName = "SurrenderOrQuitButtonHintableAreaElement"
    HintTitleToken = ""
    HintBodyToken = ""
    HintExtendedToken = ""
    //HintDico = ~/LocalisationConstantes/dico_interface_outgame
    Mapping = TEugBMutablePBaseClass( Value = TUserInputMapping( KeyboardEventID = UserInputKeyboard/KEY_ENTER ) )
    ButtonAlignementToFather = [0.0, 0.0]
    ButtonAlignementToAnchor = [0.0, 0.0]
    ButtonMagnifiableWidthHeight = [EscapeMenuButtonWidth, 32]
    TextTypefaceToken = "Eurostyle"
    TextStyle = 'TextStyleEcranMoniteur_solo'
    TextColorToken = 'LDHintSolo_texte'
    BorderLineColorToken = 'LDHintSolo_texte'
    HasBackground = true
    BackgroundBlockColorToken = 'LDHintSolo_fond'
    TextSizeToken = '18'
    BorderThicknessToken = '2'
)

private LDHintParagraphStyleCentered is TParagraphStyleRTTI
(
    Alignment = UIText_Center
    VerticalAlignment = UIText_VerticalCenter
    BigWordAction = ~/BigWordAction/BigWordNewLine
    InterLine = 0.3
)

private LDHintParagraphStyleLeftAlignedExact is TParagraphStyleRTTI
(
    Alignment = UIText_Left
    VerticalAlignment = UIText_VerticalCenter
    BigWordAction = ~/BigWordAction/BigWordNewLine
    InterLine = 0
)

private LDHintParagraphStyleLeftAligned is TParagraphStyleRTTI
(
    Alignment = UIText_Left
    VerticalAlignment = UIText_VerticalCenter
    InterLine = 0.5
)

private LDHintMagnifiableInterButtonMargin is 5

private LDHintDefaultButtonContainer is BUCKListDescriptor
(
    ElementName = 'LDHintButtonList'
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [0.0, 0.0]
        MagnifiableOffset = [0.0, 0.0]
        AlignementToFather = [0.5, 0]
        AlignementToAnchor = [0.5, 0]
    )

    Axis = ~/ListAxis/Horizontal
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
    InterItemMargin = TRTTILength( Magnifiable = ~/LDHintMagnifiableInterButtonMargin )

    Elements =
    [
    ]
)
