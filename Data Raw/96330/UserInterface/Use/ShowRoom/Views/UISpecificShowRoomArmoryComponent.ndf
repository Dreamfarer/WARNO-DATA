private MaxUnitByLineInUnitDivisionGridArmory is 4

template UnitDeckListDummyButton
[
    ElementName : string = "DummyButton",
    TextElementName : string = "SlotCostName",
]
is HUDButton
(
    ElementName = <ElementName>
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [172.0, 90.0]
    )

    Grayed = true

    Components =
    [
        BUCKTextDescriptor
        (
            ElementName = <TextElementName>

            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )

            ParagraphStyle = ~/CenteredParagraphStyle
            TextStyle = "Default"

            TextToken = ""
            TextDico = ~/LocalisationConstantes/dico_interface_outgame

            TypefaceToken = "UISecondFont"
            TextColor = "SD2_BleuVariable"
            TextSize = "24"
        ),
    ]
)

//-------------------------------------------------------------------------------------
private ArmoryCategoryRadioButtonManager is TBUCKRadioButtonManager()

private ArmoryCategoryButtonDescriptor is BUCKButtonDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [70.0, 34.0]
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )
    LeftClickSound = SoundEvent_ArmorySwitchCategory
    IsTogglable = true
    RadioButtonManager = ~/ArmoryCategoryRadioButtonManager
    Components =
    [
        BUCKTextureDescriptor
        (
            TextureToken = "Texture_ShortButton"
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [72.0, 36.0]
                AlignementToAnchor = [0.5, 0.5]
                AlignementToFather = [0.5, 0.5]
            )

            ResizeMode = ~/TextureResizeMode/UserDefined
        ),
        BUCKTextDescriptor
        (
            ElementName = "CategoryButtonTextElement"
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]

            )

            ChildFitToContent = true

            ParagraphStyle = CenteredParagraphStyle
            TextStyle = "Default"

            HorizontalFitStyle = ~/FitStyle/UserDefined

            TypefaceToken = "UIMainFont"
            BigLineAction = ~/BigLineAction/ResizeFont

            TextSize = "22"
            TextDico = ~/LocalisationConstantes/dico_interface_outgame
            TextColor = "MarronPanel_noir2"
        ),
        BUCKSpecificHintableArea
        (
            ElementName = "CategoryButtonHintableArea"
            DicoToken = ~/LocalisationConstantes/dico_interface_ingame
        )
    ]
)

//-------------------------------------------------------------------------------------

private template ArmoryAllianceFilterButton
[
    ElementNamePrefix : string = "AllianceFilter",
    ElementName : string,
    TextToken : string = '',
    TextureToken : string = 'transparent',
    IsFilterButton : bool,
    DarkWhenToggled : bool = false,
]
is BUCKButtonDescriptor
(
    ElementName = <ElementNamePrefix> + <ElementName>
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [54.0, 34.0]
        AlignementToAnchor = [0.0, 0.5]
        AlignementToFather = [0.0, 0.5]
    )

    IsTogglable = <IsFilterButton>
    LeftClickSound = SoundEvent_ArmorySelectAlliance
    HasBorder = false
    BorderLineColorToken = "Blanc"
    BorderThicknessToken = "1"
    Components =
    [
        BUCKTextureDescriptor
        (
            TextureToken = "Texture_bordure_drapeau"
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [56.0, 36.0]
                AlignementToAnchor = [0.5, 0.5]
                AlignementToFather = [0.5, 0.5]
            )

            ResizeMode = ~/TextureResizeMode/UserDefined
        ),
        BUCKTextureDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [52.0, 32.0]
                AlignementToAnchor = [0.5, 0.5]
                AlignementToFather = [0.5, 0.5]
            )

            ResizeMode = ~/TextureResizeMode/UserDefined
            TextureToken = <TextureToken>
        ),
        BUCKTextDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )

            ParagraphStyle = TParagraphStyleRTTI
            (
                Alignment = UIText_Center
                VerticalAlignment = UIText_VerticalCenter
                InterLine = 0
            )

            TextStyle = "DefaultWithStroke"

            HorizontalFitStyle = ~/FitStyle/UserDefined

            TypefaceToken = "Liberator"
            BigLineAction = ~/BigLineAction/CutByDots

            TextSize = "14"
            TextToken = <TextToken>
            TextDico = ~/LocalisationConstantes/dico_interface_outgame
            TextColor = "GrisBois_armory"
        ),
        BUCKContainerDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )
            HasBackground = true
            BackgroundBlockColorToken = <DarkWhenToggled> ? "Showroom/Overlay_DarkWhenToggled" : "Showroom/Overlay"
        ),
    ]
)

//-------------------------------------------------------------------------------------

private template CategoryFiltersMainRack
[
    ElementNamePrefix : string,
    CategoryTextToken : string,
    TextureColorToken : string = "GrisOnglet_armory",
    MagnifiableWidthHeight : float2 = [40.0, 40.0],
    MagnifiableWidthHeight_button : float2 = [28.0, 28.0],
] is BUCKListElementDescriptor
(
    ComponentDescriptor = BUCKRackDescriptor
    (
        ElementName = <ElementNamePrefix> + "FiltersMainRack"

        ComponentFrame = TUIFramePropertyRTTI
        (
            AlignementToAnchor = [0.5, 0.0]
            AlignementToFather = [0.5, 0.0]
        )

        BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
        Axis = ~/ListAxis/Vertical

        InterItemMargin = TRTTILength(Magnifiable = 8.0)

        BladeDescriptor = BUCKRackDescriptor
        (
            ElementName = "FiltersSubRack"
            ComponentFrame = TUIFramePropertyRTTI
            (
                AlignementToAnchor = [0.5, 0.0]
                AlignementToFather = [0.5, 0.0]
            )

            BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
            Axis = ~/ListAxis/Horizontal
            InterItemMargin = TRTTILength(Magnifiable = 2.0)
            BladeDescriptor = ShowroomTogglableFilterButton
            (
                ElementName = "FilterButton"
                MagnifiableWidthHeight = <MagnifiableWidthHeight_button>
                SubComponentMagnifiableWidthHeight = <MagnifiableWidthHeight>
                SubComponentRelativeWidthHeight = [0.0, 0.0]
                TextureColorToken = <TextureColorToken>
            )
        )
    )
)

//-------------------------------------------------------------------------------------

private BoutonMenuShowRoomArmory is BUCKContainerDescriptor
(
    ElementName = "ArmoryBottomBoutonsContainer"
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 0.0]
        MagnifiableWidthHeight = [0.0, 45.0]
        AlignementToAnchor = [0.5, 1.0]
        AlignementToFather = [0.5, 1.0]
    )

    Components =
    [
        ~/BattlegroupsButton,
        MainBackButtonContainer
        (
            ButtonDefaultToken = "BTN_BACK"
            BackMapping = TEugBMutablePBaseClass( Value = TUserInputMapping( KeyboardEventID = UserInputKeyboard/KEY_ESCAPE ) )
            ButtonLeftClickSound = SoundEvent_BackToMainMenuFromArmory
        )
    ]
)

//-------------------------------------------------------------------------------------

BattlegroupsButton is BUCKButtonDescriptor
(
    ElementName = 'BattlegroupsButton'

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [DeckListTextureWidth, 100.0]
        MagnifiableOffset = [DeckListHorizontalOffset, -60.0]
    )

    IsTogglable = true
    DefaultToggleValue = false
    RadioButtonManager =  nil
    CannotDeselect = false
    ForceEvents = false
    LeftClickSound = SoundEvent_OpenBattlegroupsList
    Components =
    [
        BUCKTextureDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [DeckListTextureWidth, DeckListTextureHeight]
                AlignementToAnchor = [0.5, 0.0]
                AlignementToFather = [0.5, 0.0]
            )
            TextureToken = 'deck_fond'
            Components =
            [
                BUCKTextDescriptor
                (
                    ComponentFrame = TUIFramePropertyRTTI
                    (
                        RelativeWidthHeight = [1.0, 0.0]
                        AlignementToFather = [0.5, 0.0]
                        AlignementToAnchor = [0.5, 0.0]
                        MagnifiableOffset = [0.0, 60.0]
                    )

                    HorizontalFitStyle = ~/FitStyle/UserDefined
                    VerticalFitStyle = ~/FitStyle/FitToContent

                    ParagraphStyle = paragraphStyleTextCenter
                    TextStyle = "Default"
                    TypefaceToken = "Liberator"
                    BigLineAction = ~/BigLineAction/MultiLine
                    TextToken = 'BATGR_BTN'
                    TextDico = ~/LocalisationConstantes/dico_interface_ingame
                    TextColor = "gris_load"
                    TextSize = "32"
                ),
                BUCKTextureDescriptor
                (
                    ComponentFrame = TUIFramePropertyRTTI
                    (
                        AlignementToFather = [1, 0.0]
                        AlignementToAnchor = [1, 0.0]
                        MagnifiableOffset = [-65.0, 73.0]
                        MagnifiableWidthHeight = [20.0, 20.0]
                    )
                    TextureToken = 'showRoomTexture_maximize'
                    TextureColorToken = 'MarronPanel_noir_toggled2'
                    Rotation = -90
                ),
            ]
        )
    ]
)

//-------------------------------------------------------------------------------------

template ShowroomTogglableFilterButton
[
    ElementName : string = "",
    MagnifiableWidthHeight : float2 = [56.0, 36.0],
    AlignementToAnchor : float2 = [0.0, 0.5],
    AlignementToFather : float2 = [0.0, 0.5],
    SubComponentRelativeWidthHeight : float2 = [1.0, 1.0],
    SubComponentMagnifiableWidthHeight : float2 = [0.0, 0.0],
    LeftClickSound : TSoundDescriptor = SoundEvent_ArmorySelectCountry,
    TextToken : string = "",
    TextureToken : string = "",
    TextureColorToken : string = "",
] is BUCKButtonDescriptor
(
    ElementName = <ElementName>
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = <MagnifiableWidthHeight>
        AlignementToAnchor = <AlignementToAnchor>
        AlignementToFather = <AlignementToFather>
    )

    IsTogglable = true
    LeftClickSound = <LeftClickSound>

    Components =
    [
        BUCKTextureDescriptor
        (
            TextureToken = "Texture_ShortButton"
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
                AlignementToAnchor = [0.5, 0.5]
                AlignementToFather = [0.5, 0.5]
            )
            ResizeMode = ~/TextureResizeMode/UserDefined
        ),
        BUCKTextureDescriptor
        (
            ElementName = <ElementName> + "Texture"
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = <SubComponentRelativeWidthHeight>
                MagnifiableWidthHeight = <SubComponentMagnifiableWidthHeight>
                AlignementToAnchor = [0.5, 0.5]
                AlignementToFather = [0.5, 0.5]
            )
            ResizeMode = ~/TextureResizeMode/UserDefined
            TextureToken = <TextureToken>
            TextureColorToken = <TextureColorToken>
        ),
        BUCKTextDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )

            ParagraphStyle = TParagraphStyleRTTI
            (
                Alignment = UIText_Center
                VerticalAlignment = UIText_VerticalCenter
                InterLine = 0
            )

            TextStyle = "DefaultWithStroke"

            HorizontalFitStyle = ~/FitStyle/UserDefined

            TypefaceToken = "Liberator"
            BigLineAction = ~/BigLineAction/CutByDots

            TextSize = "14"
            TextToken = <TextToken>
            TextDico = ~/LocalisationConstantes/dico_interface_outgame
            TextColor = "GrisBois_armory"
        ),
        BUCKTextureDescriptor
        (
            TextureToken = "Texture_ShortButton_FilterButtonOverlay"
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
                AlignementToAnchor = [0.5, 0.5]
                AlignementToFather = [0.5, 0.5]
            )
            ResizeMode = ~/TextureResizeMode/UserDefined
        ),
        BUCKSpecificHintableArea
        (
            ElementName = <ElementName> + "HintableArea"
            DicoToken = ~/LocalisationConstantes/dico_unites
        )
    ]
)

//-------------------------------------------------------------------------------------

ArmoryCountryFilterButtonDescriptor is ShowroomTogglableFilterButton
(
    ElementName = "CountryButton"
    SubComponentRelativeWidthHeight = [0.7, 0.7]
)

//-------------------------------------------------------------------------------------

ArmoryDivisionFilterButtonDescriptor is BUCKButtonDescriptor
(
    ElementName = "ArmoryDivisionFilterButton"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [40.0, 40.0]
        AlignementToAnchor = [0.0, 0.5]
        AlignementToFather = [0.0, 0.5]
    )

    IsTogglable = true
    HasBorder = false
    BorderLineColorToken = "Blanc"
    BorderThicknessToken = "1"
    LeftClickSound = SoundEvent_ArmorySelectDivision

    Components =
    [
        BUCKTextureDescriptor
        (
            ElementName = 'ButtonTexture'

            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [32.0, 32.0]
                MagnifiableOffset = [0.0, -1.0]
                AlignementToAnchor = [0.5, 0.5]
                AlignementToFather = [0.5, 0.5]
            )

            TextureFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )

            ClipTextureToComponent = true
        ),

        BUCKTextDescriptor
        (
            ElementName = "ButtonText"
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [32.0, 32.0]
                AlignementToAnchor = [0.5, 0.5]
                AlignementToFather = [0.5, 0.5]
            )

            ParagraphStyle = TParagraphStyleRTTI
            (
                Alignment = UIText_Center
                VerticalAlignment = UIText_VerticalCenter
                InterLine = 0
            )

            TextStyle = "DefaultWithStroke"
            TypefaceToken = "Liberator"
            TextSize = "14"
            TextColor = "GrisBois_armory"

            TextPadding = TRTTILength4( Magnifiable = [2.0, 0.0, 2.0, 0.0] )

            HorizontalFitStyle = ~/FitStyle/UserDefined
            BigLineAction = ~/BigLineAction/ResizeFont
            TextDico = ~/LocalisationConstantes/dico_interface_outgame
        ),
        BUCKTextureDescriptor
        (
            TextureToken = "Texture_ShortButton"
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [40.0, 40.0]
                AlignementToAnchor = [0.5, 0.5]
                AlignementToFather = [0.5, 0.5]
            )
            ResizeMode = ~/TextureResizeMode/UserDefined
        ),
        BUCKSpecificHintableArea
        (
            ElementName = "FilterHintableArea"
            DicoToken = ~/LocalisationConstantes/dico_unites
        )
    ]
)

// -------------------------------------------------------------------------------------------------
// UISpecificSkinRackView
// -------------------------------------------------------------------------------------------------

UISpecificSkinRackView is TUISpecificSkinRackViewDescriptor
(
    MainComponentDescriptor = BUCKRackDescriptor
    (
        ElementName = "UnitSkinButtonRack"

        Axis = ~/ListAxis/Horizontal
        ComponentFrame = TUIFramePropertyRTTI
        (
            RelativeWidthHeight = [0.0, 0.5]
        )

        InterItemMargin = TRTTILength( Pixel = 2.0)

        BladeDescriptor = ~/UnitSkinButton
    )
)

// -------------------------------------------------------------------------------------------------
// UnitSkinButton
// -------------------------------------------------------------------------------------------------

private UnitSkinButtonMagnifiableWidth is 29.0
private UnitSkinButtonMagnifiableWithBorderWidth is 32.0
private UnitSkinButtonMagnifiableBorderWidth is 3.0

// Button for Skin Unit Icon
UnitSkinButton is BUCKButtonDescriptor
(
    ElementName = 'UnitSkinButton'

    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [UnitSkinButtonMagnifiableWithBorderWidth, 0.0]
        RelativeWidthHeight = [0.0, 1.0]
    )

    HasBackground = true
    BackgroundBlockColorToken = 'Orange'
    IsTogglable = true
    CannotDeselect = true
    HidePointerEvents = false

    HasBorder = true
    BorderLineColorToken = "SkinRack/Border"
    BorderThicknessToken = "2"

    Components =
    [
        ~/UnitSkinButtonBigBorder,

        BUCKTextureDescriptor
        (
            ElementName = 'UnitSkinIcon'
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [0.0, 1.0]
                MagnifiableWidthHeight = [UnitSkinButtonMagnifiableWidth, 0.0]
                PixelOffset = [UnitSkinButtonMagnifiableBorderWidth, 0.0]
            )

            TextureFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )
        ),
    ]
)

//-------------------------------------------------------------------------------------

UnitSkinButtonBigBorder is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [0.0, 1.0]
        PixelWidthHeight = [UnitSkinButtonMagnifiableBorderWidth, 0.0]
        AlignementToAnchor = [0.0, 0.5]
        AlignementToFather = [0.0, 0.5]
    )

    HasBackground = true
    BackgroundBlockColorToken = "ButtonHUD/Main"
)

//-------------------------------------------------------------------------------------
// affichage des pays & catégories d'unités
private ShowroomTopFiltersList is BUCKListDescriptor
(
    ElementName = "ShowroomTopFiltersList"
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [0.0, 1.0]
    )

    FirstMargin = TRTTILength( Magnifiable = 0.0 )
    InterItemMargin = TRTTILength( Magnifiable = 10.0 )
    LastMargin = TRTTILength( Magnifiable = 10.0 )
    Axis = ~/ListAxis/Horizontal

    Elements =
    [
        // Alliance Filter

        BUCKListElementSpacer( Magnifiable = 10.0 ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = TexteIndicatifCategorie
            (
                ElementName = "AlliancesTitle"
                TextToken = 'Fil_allia'
                HasBorder = false
                AlignementToAnchor = [0.0, 0.5]
                AlignementToFather = [0.0, 0.5]
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ShowroomTogglableFilterButton
            (
                ElementName = "AllianceFilterAllies"
                TextureToken = "CommonTexture_MotherCountryFlag_NATO"
                SubComponentRelativeWidthHeight = [0.7, 0.7]
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = ShowroomTogglableFilterButton
            (
                ElementName = "AllianceFilterAxis"
                TextureToken = "CommonTexture_MotherCountryFlag_WP"
                SubComponentRelativeWidthHeight = [0.7, 0.7]
            )
        ),

        // Nation Filter

        BUCKListElementSpacer( Magnifiable = 15.0 ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = TexteIndicatifCategorie
            (
                ElementName = "CountriesTitle"
                TextToken = 'Fil_pays'
                HasBorder = false
                AlignementToAnchor = [0.0, 0.5]
                AlignementToFather = [0.0, 0.5]
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ShowroomTogglableFilterButton
            (
                ElementName = "CountryFilterAll"
                TextToken = "ARMF_ALL"
            )
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKRackDescriptor
            (
                ElementName = "CountryFilterRack"
                ComponentFrame = TUIFramePropertyRTTI
                (
                    RelativeWidthHeight = [0.0, 1.0]
                )

                FirstMargin = TRTTILength( Magnifiable = 0.0 )
                InterItemMargin = TRTTILength( Pixel = 5.0 )
                Axis = ~/ListAxis/Horizontal

                BladeDescriptor = ArmoryCountryFilterButtonDescriptor
            )
        ),

        // Division filter

        BUCKListElementSpacer( Magnifiable = 15.0 ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = TexteIndicatifCategorie
            (
                ElementName = "DivisionsTitle"
                TextToken = 'Fil_div'
                HasBorder = false
                AlignementToAnchor = [0.0, 0.5]
                AlignementToFather = [0.0, 0.5]
            )
        ),
        BUCKListElementDescriptor
        (
            ExtendWeight = 1.0
            ComponentDescriptor = BUCKSpecificScrollingContainerDescriptor
            (
                ElementName = "DivisionsScrollingContainer"
                ComponentFrame = TUIFramePropertyRTTI
                (
                    RelativeWidthHeight = [1.0, 1.0]
                )

                ScrollStepSize = [44.0, 0.0]
                HasHorizontalScrollbar = true
                HorizontalScrollbarComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [0.0, 10.0]
                    MagnifiableOffset = [0,10]
                    AlignementToAnchor = [0.0, 1.0]
                    AlignementToFather = [0.0, 1.0]
                )

                Components =
                [
                    BUCKRackDescriptor
                    (
                        ElementName = "DivisionFilterRack"
                        ComponentFrame = TUIFramePropertyRTTI
                        (
                            RelativeWidthHeight = [0.0, 1.0]
                        )

                        FirstMargin = TRTTILength( Magnifiable = 0.0 )
                        InterItemMargin = TRTTILength( Pixel = 4.0 )
                        Axis = ~/ListAxis/Horizontal

                        BladeDescriptor = ArmoryDivisionFilterButtonDescriptor
                    )
                ]
            )
        )
    ]
)

template ShowroomLightCycleButtonContainer
[
    MagnifiableOffset : float2,
] is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        AlignementToAnchor = [1.0, 0.0]
        AlignementToFather = [1.0, 0.0]
        MagnifiableOffset = <MagnifiableOffset>
    )

    FitStyle = ~/ContainerFitStyle/FitToContent

    Components =
    [
        ShowroomLightCycleButton
    ]
)

//-------------------------------------------------------------------------------------

ShowroomLightCycleButton is BUCKButtonDescriptor
(
    ElementName = "ShowroomLightCycleButton"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [30.0, 30.0]
        AlignementToAnchor = [0.0, 0.5]
        AlignementToFather = [0.0, 0.5]
    )

    Mapping = $/KeyboardOption/Mapping_NextLightMode

    Components =
    [
        BUCKTextureDescriptor
        (
            TextureToken = "ShowRoomTexture_LightCycle"
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )

            ResizeMode = ~/TextureResizeMode/UserDefined
            TextureColorToken = "ShowroomGray"
        ),
        BUCKSpecificHintableArea
        (
            HintTitleToken = 'cycli_t'
            HintBodyToken = 'cycli_b'
            // HintExtendedToken ='pip_hqe'
            DicoToken = ~/LocalisationConstantes/dico_interface_outgame
        )



    ]
)

//-------------------------------------------------------------------------------------
// affichae catégories
private affichageCategorie is BUCKListElementDescriptor
(
    ComponentDescriptor = BUCKListDescriptor
    (
        ElementName = 'DeckCategoryList'
        ComponentFrame = TUIFramePropertyRTTI
        (
            MagnifiableWidthHeight = [100.0, 0]
        )
        Axis = ~/ListAxis/Vertical

        // => ArmoryCategoryButtonDescriptor
    )
)

template TexteIndicatifCategorie
[
    ElementName : string,
    TextToken : string,
    HasBorder : bool = true,
    AlignementToFather : float2 = [0.5, 0.0],
    AlignementToAnchor : float2 = [0.5, 0.0],

] is BUCKTextDescriptor
(
    ElementName = <ElementName>
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [0.0, 20.0]
        AlignementToFather = <AlignementToFather>
        AlignementToAnchor = <AlignementToAnchor>
    )

    ParagraphStyle = paragraphStyleTextCenter
    TextStyle = "Default"
    HorizontalFitStyle = ~/FitStyle/FitToContent
    VerticalFitStyle = ~/FitStyle/UserDefined
    TypefaceToken = "Eurostyle"
    BigLineAction = ~/BigLineAction/MultiLine
    TextToken = <TextToken>
    TextDico = ~/LocalisationConstantes/dico_interface_outgame
    TextColor = "MarronPanel_noir"
    TextSize = "10"

    HasBorder = <HasBorder>
    BorderThicknessToken = '2'
    BorderLineColorToken = 'MarronPanel_noir'
    BordersToDraw = ~/TBorderSide/Top
)

//-------------------------------------------------------------------------------------

UnitGridNameFilter is BUCKSpecificEditableTextDescriptor
(
    ElementName = 'NameFilterEditableText'

    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 0.0]
        MagnifiableWidthHeight = [-20.0, 20.0]
        AlignementToAnchor = [0.5, 0.0]
        AlignementToFather = [0.5, 0.0]
    )

    ClippingContainerFrameProperty = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 1.0]
        MagnifiableWidthHeight = [-10.0, 0.0]
        AlignementToFather = [0.5, 0.5]
        AlignementToAnchor = [0.5, 0.5]
    )

    TextSizeToken = "14"
    TypefaceToken = "Eurostyle"
    HasBorder = false
    Flags = EditableTextFlag/H_LEFT + EditableTextFlag/ONE_LINE
    MaxChars = 140
    TextStyle = "Default"
    TextColorToken = "MarronPanel_noir"

    HintComponentName = "NameFilterEditableTextHint"

    HidePointerEvents = true

    Components =
    [
        PanelRoundedCorner
        (
            Radius = 5
            BackgroundBlockColorToken = "MarronPanel_fonce"
            BorderLineColorToken = "MarronPanel_noir"
        ),
    ]
)

//-------------------------------------------------------------------------------------

ArmoryUnitListContainer is BUCKContainerDescriptor
(
    ElementName = 'ArmoryUnitListContainer'
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [0.0, 1.0]
        MagnifiableWidthHeight = [700.0, -37.0]
        MagnifiableOffset = [100.0, 77.0]
    )

    Components =
    [
        BUCKTextDescriptor
        (
            ElementName = "ArmoryUnitListUnitsNumber"

            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [0.0, 20.0]
                AlignementToAnchor = [0.0, 0.0]
                AlignementToFather = [0.0, 0.0]
                MagnifiableOffset = [5.0, -24.0]
            )

            ParagraphStyle = TParagraphStyleRTTI
            (
                Alignment = UIText_Center
                VerticalAlignment = UIText_VerticalCenter
                InterLine = 0
            )

            TextPadding = TRTTILength4( Magnifiable = [5.0, 0.0, 5.0, 0.0] )

            HasBackground = true
            BackgroundBlockColorToken = "Black80"

            HorizontalFitStyle = ~/FitStyle/FitToContent

            TextStyle = "Default"

            TextToken = "ARM_NBU"
            TextDico = ~/LocalisationConstantes/dico_interface_outgame

            TypefaceToken = "Liberator"
            TextColor = "ListeExcel/Cartouche"
            TextSize = "18"
        ),
        BUCKSpecificScrollingContainerDescriptor
        (
            ElementName = 'UnitDivisionScrollingContainer'
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 0.0]
                MagnifiableWidthHeight = [0.0, 905.0]
            )

            ExternalScrollbar = true

            ScrollStepSize = [0.0, 60.0]
            HasVerticalScrollbar = true
            VerticalScrollbarComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [10.0, 0.0]
                MagnifiableOffset = [5.0, 0.0]
            )

            Components =
            [
                BUCKRackDescriptor
                (
                    ElementName = 'UnitDivisionGrid'

                    ComponentFrame = TUIFramePropertyRTTI()

                    Axis = ~/ListAxis/Vertical
                    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild
                    InterItemMargin = TRTTILength( Magnifiable = 1.0 )

                    BladeDescriptor = BUCKGridDescriptor
                    (
                        ElementName = 'PackList'

                        ComponentFrame = TUIFramePropertyRTTI()

                        FirstElementMargin = TRTTILength2( Magnifiable = [15.0, 0.0] )
                        InterElementMargin = TRTTILength2( Magnifiable = [1.0, 1.0] )
                        LastElementMargin = TRTTILength2( Magnifiable = [25.0, 0.0] )

                        MaxElementsPerDimension = [MaxUnitByLineInUnitDivisionGridArmory, 0]

                        // envoie UnitPackDescriptor
                    )
                ),
            ]
        ),
    ]
)

//-------------------------------------------------------------------------------------

ShowroomTopFiltersBarContainer is BUCKContainerDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 0.0]
        MagnifiableWidthHeight = [0.0, 45.0]
    )
    HasBackground = true
    BackgroundBlockColorToken = 'MarronPanel_base'

    Components =
    [
        ShowroomTopFiltersList
    ]
)

//-------------------------------------------------------------------------------------

template ShowroomVerticalFilterBarElement
[
    ElementName : string,
    ElementTitle : string,
    ComponentDescriptor : TBUCKContainerDescriptor
] is BUCKListElementDescriptor
(
    ComponentDescriptor = BUCKListDescriptor
    (
        ElementName = <ElementName> + "List"
        ComponentFrame = TUIFramePropertyRTTI
        (
            RelativeWidthHeight = [1.0, 0.0]
        )
        Axis = ~/ListAxis/Vertical

        Elements =
        [
            BUCKListElementDescriptor
            (
                ComponentDescriptor = TexteIndicatifCategorie( TextToken = <ElementTitle> ElementName = <ElementName> + "Title")
            ),
            BUCKListElementSpacer(Magnifiable = 5.0),
            BUCKListElementDescriptor
            (
                ComponentDescriptor = <ComponentDescriptor>
            ),
        ]
    )
)

ShowroomVerticalFilterBarContainer is PanelRoundedCorner
(
    ElementName = "FiltresCategoriesContainer"
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [100.0, 970.0]
        MagnifiableOffset = [0.0, 0.0]
    )

    BorderLineColorToken = 'MarronPanel_noir'
    BackgroundBlockColorToken = 'MarronPanel_base'
    RoundedVertexes = [false,false,false,true]
    Radius = 20
    Components =
    [
        BUCKListDescriptor
        (
            ElementName = "FiltresCategories"
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 0.0]
            )

            InterItemMargin = TRTTILength( Magnifiable = 30.0 )

            Axis = ~/ListAxis/Vertical
            Elements =

            [
                //-------------------------------------------------------------------------------------
                // affichage du filtre par nom
                ShowroomVerticalFilterBarElement
                (
                    ElementName = "NameFilter"
                    ElementTitle = "Fil_nom"
                    ComponentDescriptor = UnitGridNameFilter
                ),
                //-------------------------------------------------------------------------------------
                // affichage des catégories
                ShowroomVerticalFilterBarElement
                (
                    ElementName = "CategoryFilters"
                    ElementTitle = "Fil_cat"
                    ComponentDescriptor = affichageCategorie
                ),
                //-------------------------------------------------------------------------------------
                // affichage des types
                ShowroomVerticalFilterBarElement
                (
                    ElementName = "TypeFilters"
                    ElementTitle = "Fil_role"
                    ComponentDescriptor = CategoryFiltersMainRack
                    (
                        ElementNamePrefix = "Type"
                        MagnifiableWidthHeight_button = [40.0, 40.0]
                        MagnifiableWidthHeight = [40.0, 40.0]

                        CategoryTextToken = "DES_TYPE"
                        TextureColorToken = "MarronPanel_noir2"
                    )
                ),
                //-------------------------------------------------------------------------------------
                // affichge des valeurs
                ShowroomVerticalFilterBarElement
                (
                    ElementName = "ValueFilters"
                    ElementTitle = "Fil_valeur"
                    ComponentDescriptor = CategoryFiltersMainRack
                    (
                        ElementNamePrefix = "Role"
                        CategoryTextToken = "DES_ROLE"
                        MagnifiableWidthHeight = [20.0, 20.0]
                        TextureColorToken = "Bouton_puissance"
                    )
                )
            ]
        )
    ]
)

//-------------------------------------------------------------------------------------

PanelArmurerieHaut is BUCKListDescriptor
(
    ElementName = "PanneauxFiltres"
    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 0.0]
    )

    Axis = ~/ListAxis/Vertical
    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ShowroomTopFiltersBarContainer
        ),
        BUCKListElementDescriptor
        (
            ComponentDescriptor = ShowroomVerticalFilterBarContainer
        ),
    ]
)

//-------------------------------------------------------------------------------------

ArmoryMainComponentDescriptor is BUCKContainerDescriptor
(
    ElementName = "ArmoryMainComponent"

    ComponentFrame = TUIFramePropertyRTTI
    (
        RelativeWidthHeight = [1.0, 1.0]
    )

    Components =
    [
        ~/PanelArmurerieHaut,
        ~/ArmoryUnitListContainer,
        ~/BoutonMenuShowRoomArmory,
        AnimationPanelUnitInfos(),
        BUCKContainerDescriptor
        (
            UniqueName = "BattlegroupsListForArmory"
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
            )

            FitStyle = ~/ContainerFitStyle/None
        ),
        ShowroomLightCycleButtonContainer(MagnifiableOffset = [-10.0, 65.0]),
    ]
)

//-------------------------------------------------------------------------------------
private AffichageHintNewbieArmory is PanelRoundedCorner
(
    ComponentFrame = TUIFramePropertyRTTI
    (
        MagnifiableWidthHeight = [250.0, 250.0]
        AlignementToAnchor = [1.0, 0.0]
        AlignementToFather = [1.0, 0.0]
        MagnifiableOffset = [-10,50]
    )

    BackgroundBlockColorToken = 'hint_fond'
    BorderLineColorToken = 'MarronPanel_noir'

    Components =
    [
        BUCKTextDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                RelativeWidthHeight = [1.0, 1.0]
                AlignementToFather = [0.5, 0.0]
                AlignementToAnchor = [0.5, 0.0]
            )

            ParagraphStyle = TParagraphStyleRTTI
            (
                Alignment = UIText_Left
                VerticalAlignment = UIText_Up
                InterLine = 0.5
            )
            TextPadding = TRTTILength4(Magnifiable = [5.0, 15.0, 5.0, 15.0])
            TextStyle = "Default"
            HorizontalFitStyle = ~/FitStyle/UserDefined
            VerticalFitStyle = ~/FitStyle/UserDefined
            TypefaceToken = "Eurostyle"
            BigLineAction = ~/BigLineAction/MultiLine
            TextToken = 'nwb_armory'
            TextDico = ~/LocalisationConstantes/dico_interface_ingame
            TextColor = "MarronPanel_noir"
            TextSize = "14"
        )
    ]
)

//-------------------------------------------------------------------------------------

MaxUnitsInDeckPerCategory is 10
ArmoryUnitButtonRadioManager is TBUCKRadioButtonManager()
DefaultDivisionFilterTag is "DEFAULT"

ArmoryComponentDescriptor is TUISpecificShowRoomArmoryComponentDescriptor
(

    MainComponentDescriptor = ~/ArmoryMainComponentDescriptor

    //-------------------------------------------------------------------------------------
    // détails & paramètres
    //-------------------------------------------------------------------------------------

    UnitPackDescriptor = BUCKListDescriptor
    (
        ComponentFrame = TUIFramePropertyRTTI
        (
            MagnifiableWidthHeight = [0.0, 90.0]
        )
        MagnifierMultiplication = 1
        ClipContent = true
        InterItemMargin = TRTTILength( Magnifiable = 1.0 )
        Axis = ~/ListAxis/Horizontal

        BackgroundBlockColorToken = 'Blanc'
        FirstMargin = TRTTILength( Magnifiable = 9.0 )
        LastMargin = TRTTILength( Magnifiable = 10.0 )
     )

    DeckUnitButtonDummyDescriptor = UnitDeckListDummyButton()

    SkinRackComponentDescriptor = ~/UISpecificSkinRackView

    UnitPackComponentDescriptor = UnitButtonPackDescriptor
    (
        RadioButtonManager = ~/ArmoryUnitButtonRadioManager
    )

    DivisionPanelDescriptor = DivisionPanelDescriptor
    (
        MagnifierMultiplication = 0.7
        NeedUniqueName = true
        UniqueNamePrefix = "DeckBuilding"
        UseInGame = true
    )

    DivisionFilterTag = ~/DefaultDivisionFilterTag

    FactoryDisplayOrder =
    [
        EDefaultFactories/UniversalFactory,
        EDefaultFactories/Logistic,
        EDefaultFactories/Infantry,
        EDefaultFactories/Support,
        EDefaultFactories/Tanks,
        EDefaultFactories/Recons,
        EDefaultFactories/AT,
        EDefaultFactories/Helis,
        EDefaultFactories/Planes,

    ]

    HideUnitListFactor = TUIAnimFactorRTTI
    (
        AnimDuration = 0.5
        Modificator = ~/AnimModificator/None
    )

    HideInterfaceFactor = TUIAnimFactorRTTI
    (
        AnimDuration = 0.5
        Modificator = ~/AnimModificator/None
        ParamsAnim =
        [
            -50.0, // Offset en Y à utiliser pour laisser les boutons affiches en bas
        ]
    )

    TypeFilters =
    [
        MAP
        [
            ("Texture_Speciality_Icon_hq", ["hq", "hq_inf", "hq_tank", "hq_veh"]),
            ("Texture_Speciality_Icon_supply", ["supply","hel_supply"]),
        ],
        MAP
        [
            ("Texture_Speciality_Icon_infantry", ["infantry"]),
            ("Texture_Speciality_Icon_engineer", ["engineer"]),

        ],


        MAP
        [
            ("Texture_Speciality_Icon_mortar", ["mortar"]),
            ("Texture_Speciality_Icon_howitzer", ["howitzer"]),

        ],
        MAP
        [
            ("Texture_Speciality_Icon_mlrs", ["mlrs"]),

        ],
        MAP
        [
            ("Texture_Speciality_Icon_ifv", ["ifv"]),
            ("Texture_Speciality_Icon_armor", ["armor"]),
        ],
        MAP[
            ("Texture_Speciality_Icon_reco", ["reco","hel_reco"]),
            ("Texture_Speciality_Icon_transport", ["transport","hel_transport"]),
        ],
        MAP
        [
            ("Texture_Speciality_Icon_appui", ["appui","hel_appui"]),
            ("Texture_Speciality_Icon_AT", ["AT","hel_at"]),

        ],
        MAP
        [
            //("Texture_Speciality_Icon_jetIntercept", ["jetIntercept"]),
            ("Texture_Speciality_Icon_AA", ["AA","hel_aa"]),
            ("Texture_Speciality_Icon_sead", ["sead"]),

        ],
    ]

    RoleFilters =
    [
        MAP
        [
            ("Texture_Speciality_Icon_A",["tank_A"]),
            ("Texture_Speciality_Icon_B",["tank_B"]),

        ],
        MAP
        [

            ("Texture_Speciality_Icon_C",["tank_C"]),
            ("Texture_Speciality_Icon_D",["tank_D"]),
        ],
    ]

    NbUnitsInDeckPerCategory = ~/MaxUnitsInDeckPerCategory

    //-------------------------------------------------------------------------------------
    // boutons pour catégories
    //-------------------------------------------------------------------------------------
    CategoryButtonDescriptor = ~/ArmoryCategoryButtonDescriptor

    //-------------------------------------------------------------------------------------

    ShortcutsLayer = $/M3D/Input/UserInputLayerHandler/InputLayer_InGameShortcuts

    SideBySideButtonComponentDescriptor = ~/SideBySideButtonDescriptor
    AnimationButtonComponentDescriptor = ~/AnimationButtonDescriptor
    MaxUnitByLineInUnitDivisionGrid = MaxUnitByLineInUnitDivisionGridArmory
    ShortcutUserInputLayer = $/M3D/Input/UserInputLayerHandler/InputLayer_InGameShortcuts
)
