//-------------------------------------------------------------------------
//----------------------------- STRATEGY ----------------------------------
//-------------------------------------------------------------------------
export GenericBreakthroughDefenseStrategy is TIAGeneralStrategy
(
    StrategyName = "GenBTDefAI"
    FirstGenerator = GenBTDef_Choose_Strategy
    ConstantesMap = MAP[
        ("ForceTacticalMoveAndAttack", TEugBBoolean(Value = true)),
    ]
    AllowToByPassNbMacroActionAllowedToProduceSimultaneous = true
    TransitionList =
    [
        GenBTDef_Transition_StartToDeploy,
        GenBTDef_Transition_StartToCommand,
        GenBTDef_Transition_DeployToCommand,
    ]
)

//-------------------------------------------------------------------------
//---------------------------- CONDITIONS ---------------------------------
//-------------------------------------------------------------------------
export GenBTDef_Condition_GotoGeneric is TSequenceCondition_True
(
)
//-------------------------------------------------------------------------
export GenBTDef_Condition_CommandPhase is TSequenceCondition_Phase
(
    PhaseType = CommandPhase
)
//-------------------------------------------------------------------------
//--------------------------- TRANSITIONS ---------------------------------
//-------------------------------------------------------------------------
export GenBTDef_Transition_StartToDeploy is TIAGeneralStrategyTransition
(
    Origine = GenBTDef_Choose_Strategy
    Condition = GenBTDef_Condition_GotoGeneric
    Destination = GenBTDef_Deploiement
)
//-------------------------------------------------------------------------
export GenBTDef_Transition_StartToCommand is TIAGeneralStrategyTransition
(
    Origine = GenBTDef_Choose_Strategy
    Condition = GenBTDef_Condition_CommandPhase
    Destination = GenBTDef_Command
)
//-------------------------------------------------------------------------
export GenBTDef_Transition_DeployToCommand is TIAGeneralStrategyTransition
(
    Origine = GenBTDef_Deploiement
    Condition = GenBTDef_Condition_CommandPhase
    Destination = GenBTDef_Command
)

//-------------------------------------------------------------------------
//------------------------------ PHASES -----------------------------------
//-------------------------------------------------------------------------
export GenBTDef_Choose_Strategy is TSequenceGeneratorDescriptor
(
    // Fake phase qui permet juste d'orienter la strategie dans la direction voulue
    NbMacroActionAllowedToProduceSimultaneous = 9001
    GeneratorList =
    [
        ~/Support_Transports,
        ~/Supply_Skirmish,
    ]
)
//-------------------------------------------------------------------------
export GenBTDef_Deploiement is TSequenceGeneratorDescriptor
(
    NbMacroActionAllowedToProduceSimultaneous = 4
    GeneratorList =
    [
        // Capture de zones
        ~/CaptureAllZoneObjectif,

        ~/Support_Transports,

        ~/Supply_Skirmish,

        ~/Defense_Objectif_AA_BKT,

        ~/Defense_Objectif_BKT,
        ~/Defense_Objectif_BKT,
        ~/Defense_Objectif_BKT,

        ~/Reco,

        ~/Airstrike_SEAD,
        ~/Artillery_Expensive,
        ~/Airstrike_Assault,
        ~/Airstrike_Defense,
        ~/Artillery_TriggerHappy_1for4Corridors,
    ]

    //------------------------------
    // Scaling
    //------------------------------
    ScalingGeneratorList = ~/BKTDef_Scaling
)
//-------------------------------------------------------------------------
export GenBTDef_Command is TSequenceGeneratorDescriptor
(
    NbMacroActionAllowedToProduceSimultaneous = 3
    GeneratorList =
    [
        // Capture de zones
        ~/CaptureAllZoneObjectif,

        ~/Support_Transports,

        ~/Supply_Skirmish,

        ~/Defense_Objectif_AA_BKT,

        ~/Defense_Objectif_BKT,
        ~/Defense_Objectif_BKT,
        ~/Defense_Objectif_BKT,

        ~/Reco,

        ~/Airstrike_SEAD,
        ~/Artillery_Expensive,
        ~/Airstrike_Assault,
        ~/Airstrike_Defense,
        ~/Artillery_TriggerHappy_1for4Corridors,
    ]

    //------------------------------
    // Scaling
    //------------------------------
    ScalingGeneratorList = ~/BKTDef_Scaling
)

BKTDef_Scaling is
[
    ~/Defense_Objectif_BKT_Scaling,
]